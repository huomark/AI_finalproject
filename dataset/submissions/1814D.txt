#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> f(n), d(n);
    for (int i = 0; i < n; i++) {
        std::cin >> f[i];
    }
    for (int i = 0; i < n; i++) {
        std::cin >> d[i];
    }
        int ans = 0;
    std::vector<std::pair<i64, int>> a;
    for (int i = 0; i < n; i++) {
        i64 p = 1LL * f[i] * d[i];
        a.emplace_back(std::max(1LL, p - k), 1);
        a.emplace_back(p + 1, -1);
    }
    std::sort(a.begin(), a.end());
    int res = 0;
    i64 last = 0;
    for (auto [x, v] : a) {
        if (res > 0) {
            auto len = x - last;
            int val = 0;
            std::vector<std::pair<i64, int>> b;
            for (int i = 0; i < n; i++) {
                if (f[i] > k + 1) {
                    i64 t = last - last % f[i];
                    for (auto l : {t, t + f[i]}) {
                        i64 L = std::max(last, l + 1);
                        i64 R = std::min(x, l + f[i] - k);
                        if (L < R) {
                            b.emplace_back(L, -1);
                            b.emplace_back(R, 1);
                        }
                    }
                }
            }
            b.emplace_back(x, 0);
            i64 lst = last;
            std::sort(b.begin(), b.end());
            for (auto [x, v] : b) {
                if (x != lst && val == 0) {
                    ans = std::max(ans, res);
                }
                val += v;
                lst = x;
            }
        }
        res += v;
        last = x;
    }
        ans = n - ans;
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}