#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 i64 n;
 // i64 a, b, c;
i64 query(i64 l, i64 r) {
    l = std::max(1LL, l);
    r = std::min(n, r - 1);
    if (l > r) {
        return 0;
    }
    // {
    //     i64 res = 0;
    //     for (auto x : {a, b, c}) {
    //         if (l <= x && x <= r) {
    //             res ^= x;
    //         }
    //     }
    //     return res;
    // }
    std::cout << "xor " << l << " " << r << std::endl;
    i64 res;
    std::cin >> res;
    return res;
}
 void solve() {
    std::cin >> n;
        // std::cin >> a >> b >> c;
        std::vector<i64> ans;
    i64 l = 0, r = (1LL << 60), d = 60;
        while (true) {
        i64 m = (l + r) / 2;
        i64 a = query(l, m);
        i64 b = query(m, r);
        d--;
                if (b == 0) {
            r = m;
        } else if (a == 0) {
            l = m;
        } else if (b >> d & 1) {
            ans.push_back(b);
            r = m;
            break;
        } else {
            ans.push_back(a);
            l = m;
            break;
        }
    }
        while (true) {
        i64 m = (l + r) / 2;
        i64 a = query(l, m);
        i64 b = query(m, r);
        d--;
                if (b == 0) {
            r = m;
        } else if (a == 0) {
            l = m;
        } else {
            ans.push_back(a);
            ans.push_back(b);
            r = m;
            break;
        }
    }
        std::sort(ans.begin(), ans.end());
        std::cout << "ans";
    for (auto x : ans) {
        std::cout << " " << x;
    }
    std::cout << std::endl;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}