#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int r = 0;
constexpr int b = 1;
constexpr int quaffle = 20;
constexpr int bludger = 21;
 constexpr char name[2][5] = {"RED", "BLUE"};
 int id(std::string s) {
    if (std::isdigit(s[1])) {
        return (s[0] == 'R' ? r : b) * 10 + (s[1] - '0');
    } else if (s == ".Q") {
        return quaffle;
    } else if (s == ".B") {
        return bludger;
    }
}
 std::string entName(int x) {
    if (x < 20) {
        return std::string(1, "RB"[x / 10]) + char('0' + x % 10);
    }
    return "..";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int N, M;
    std::cin >> N >> M;
        int score[2] {};
        std::vector goal(N, std::vector(M, -1));
    std::vector pos(22, std::pair<int, int>{-1, -1});
    int quaffleOn = -1;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            std::string s;
            std::cin >> s;
                        if (s[1] == 'G') {
                goal[i][j] = s[0] == 'R' ? r : b;
            } else if (s != "..") {
                pos[id(s)] = {i, j};
            }
        }
    }
        int T;
    std::cin >> T;
        for (int t = 0; t < T; t++) {
        std::string ent;
        std::cin >> ent;
                std::string act;
        std::cin >> act;
                int e = id(ent);
                if (act == "C") {
            std::string ball;
            std::cin >> ball;
                        if (ball == ".Q") {
                quaffleOn = e;
            }
        } else if (act == "T") {
            quaffleOn = -1;
            auto [x, y] = pos[quaffle];
            if (goal[x][y] != -1) {
                score[!goal[x][y]]++;
                std::cout << t << " " << name[!goal[x][y]] << " GOAL\n";
                pos[quaffle] = {N / 2, M / 2};
            }
        } else {
            auto &[x, y] = pos[e];
            if (act == "U") {
                x--;
            } else if (act == "D") {
                x++;
            } else if (act == "L") {
                y--;
            } else if (act == "R") {
                y++;
            }
            if (quaffleOn == e) {
                pos[quaffle] = pos[e];
            }
        }
                for (int j = 0; j < 20; j++) {
            int i = (j + 10) % 20;
            if (pos[i].first != -1 && pos[i] == pos[bludger]) {
                std::cout << t << " " << entName(i) << " ELIMINATED\n";
                pos[i] = {-1, -1};
                if (quaffleOn == i) {
                    quaffleOn = -1;
                }
            }
        }
    }
        std::cout << "FINAL SCORE: " << score[r] << " " << score[b] << "\n";
        return 0;
}