#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector a(n, std::vector<int>(m));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            std::cin >> a[i][j];
        }
    }
        int lo = 1, hi = std::min(n, m);
    while (lo < hi) {
        int l = (lo + hi + 1) / 2;
                std::vector f(n + 1, std::vector<int>(m + 1));
        int ok = 0;
        for (int i = n - 1; i >= 0; i--) {
            for (int j = m - 1; j >= 0; j--) {
                f[i][j] = std::min(f[i + 1][j], f[i][j + 1]) + 1;
                if (a[i + f[i][j] - 1][j + f[i][j] - 1] < l) f[i][j]--;
                if (a[i][j] < l) f[i][j] = 0;
                if (f[i][j] >= l) ok = 1;
            }
        }
                if (ok) lo = l;
        else hi = l - 1;
    }
        std::cout << lo << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}