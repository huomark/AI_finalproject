#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, m, k;
    std::cin >> n >> m >> k;
        std::vector<int> a(m);
    for (int i = 0; i < m; i++) {
        std::cin >> a[i];
    }
        std::vector<int> q(k);
    for (int i = 0; i < k; i++) {
        std::cin >> q[i];
    }
        if (k == n) {
        std::cout << std::string(m, '1') << "\n";
    } else if (k < n - 1) {
        std::cout << std::string(m, '0') << "\n";
    } else {
        int x = 1LL * n * (n + 1) / 2 - std::accumulate(q.begin(), q.end(), 0LL);
        for (int i = 0; i < m; i++) {
            std::cout << (x == a[i]);
        }
        std::cout << "\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}