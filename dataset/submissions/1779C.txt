#include <bits/stdc++.h>
 using i64 = long long;
 int solve(std::vector<int> a) {
    int n = a.size();
        int ans = 0;
    std::priority_queue<int> h;
        i64 s = 0;
    for (int i = 0; i < n; i++) {
        s += a[i];
        h.push(-a[i]);
        while (s < 0) {
            ans++;
            s += 2 * h.top();
            h.pop();
        }
    }
        return ans;
}
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        auto ans = solve(std::vector(a.begin() + m, a.begin() + n));
        std::vector<int> b;
    for (int i = m - 1; i; i--) {
        b.push_back(-a[i]);
    }
    ans += solve(b);
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}