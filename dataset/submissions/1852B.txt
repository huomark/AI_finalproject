#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> p(n);
    std::iota(p.begin(), p.end(), 0);
    std::sort(p.begin(), p.end(), [&](int i, int j) {
        return a[i] < a[j];
    });
        int l = 0, r = n - 1;
    int pos = 0;
    std::vector<int> ans(n);
    for (int i = n; i > 0; i--) {
        if (a[p[l]] - pos == 0) {
            ans[p[l]] = -i;
            l++;
        } else if (a[p[r]] - pos == i) {
            ans[p[r]] = i;
            pos++;
            r--;
        } else {
            std::cout << "NO\n";
            return;
        }
    }
    std::cout << "YES\n";
    for (int i = 0; i < n; i++) {
        std::cout << ans[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}