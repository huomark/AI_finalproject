#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, x;
    std::cin >> n >> x;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        int m = *std::max_element(a.begin(), a.end());
        int M = 1;
    while (M <= m) {
        M *= 2;
    }
    m = std::__lg(M);
        std::vector<int> cnt(M);
    for (int i = 0; i < n; i++) {
        cnt[a[i]]++;
    }
        std::vector<int> cntZero(m);
    std::vector<int> maskZero(m);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (~a[i] >> j & 1) {
                cntZero[j]++;
                maskZero[j] ^= a[i];
            }
        }
    }
        std::vector<int> vis(M);
    for (int g = 1; g < M; g++) {
        int tot = 0;
        for (int i = g; i < M; i += g) {
            tot += cnt[i];
        }
        if (tot < 2) {
            continue;
        }
        for (int a = g; a < M; a += g) {
            if (!cnt[a]) {
                continue;
            }
            cnt[a]--;
            for (int i = 0; i < m; i++) {
                if (~a >> i & 1) {
                    cntZero[i]--;
                    maskZero[i] ^= a;
                }
            }
            int res = 0;
            int cur = tot - 1;
            for (int i = m - 1; i >= 0; i--) {
                if (cntZero[i] == 0) {
                    res |= 1 << i;
                } else if (cntZero[i] == 1 && maskZero[i] % g == 0 && !vis[maskZero[i]]) {
                    if (cur > 1) {
                        cur--;
                        vis[maskZero[i]] = 1;
                    } else {
                        res |= 1 << i;
                    }
                }
            }
            if (g > res + x) {
                std::cout << "YES\n";
                for (int b = a; b < M; b += g) {
                    if (!vis[b] && cnt[b]) {
                        std::cout << 2 << " " << a << " " << b << "\n";
                        cnt[b]--;
                        std::cout << n - 2;
                        for (int i = 0; i < M; i++) {
                            while (cnt[i]) {
                                cnt[i]--;
                                std::cout << " " << i;
                            }
                        }
                        std::cout << "\n";
                    }
                }
                return;
            }
            for (int i = m - 1; i >= 0; i--) {
                vis[maskZero[i]] = 0;
            }
            for (int i = 0; i < m; i++) {
                if (~a >> i & 1) {
                    cntZero[i]++;
                    maskZero[i] ^= a;
                }
            }
            cnt[a]++;
        }
    }
    std::cout << "NO\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}