#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 using i128 = __int128;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> p(n);
    int l = 1, r = n;
        std::vector<int> b(n);
    std::iota(b.begin(), b.end(), 0);
        for (int t = 1; b.size() > 1; t++) {
        int x = 0;
        while (a[b[x]] == t) {
            x++;
        }
                for (int i = 0; i < x; i++) {
            if (a[b[i]] == t) {
                p[b[i]] = t % 2 == 1 ? r-- : l++;
            }
        }
        for (int i = b.size() - 1; i > x; i--) {
            if (a[b[i]] == t) {
                p[b[i]] = t % 2 == 1 ? r-- : l++;
            }
        }
                std::vector<int> nb;
        for (auto i : b) {
            if (a[i] != t) {
                nb.push_back(i);
            }
        }
        b = std::move(nb);
    }
        p[b[0]] = l;
    for (int i = 0; i < n; i++) {
        std::cout << p[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}