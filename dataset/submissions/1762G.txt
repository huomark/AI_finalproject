#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i]--;
    }
        std::vector<int> cnt(n);
    for (int i = 0; i < n; i++) {
        cnt[a[i]]++;
    }
        for (int i = 0; i < n; i++) {
        if (cnt[i] > (n + 1) / 2) {
            std::cout << "NO\n";
            return;
        }
    }
        std::cout << "YES\n";
        std::set<std::pair<int, int>> s;
    for (int i = 0; i < n; i++) {
        s.emplace(cnt[i], i);
    }
        std::vector<std::vector<int>> seg;
    std::vector<int> vis(n);
        int res = 0;
    for (int i = 0, j = 1; ; i++) {
        if (vis[i]) continue;
        if (j <= i) j = i + 1;
        int mx = s.rbegin()->first;
        if (mx == (n - res + 1) / 2) break;
        while (vis[j] || a[i] == a[j]) j++;
        if (i == res) seg.push_back({});
        seg.back().push_back(j);
        seg.back().push_back(i);
        vis[i] = vis[j] = 1;
        s.erase({cnt[a[i]], a[i]});
        cnt[a[i]]--;
        s.emplace(cnt[a[i]], a[i]);
        s.erase({cnt[a[j]], a[j]});
        cnt[a[j]]--;
        s.emplace(cnt[a[j]], a[j]);
        res += 2;
    }
        std::vector<int> mx, other;
    int vmx = s.rbegin()->second;
        for (int i = 0; i < n; i++) {
        if (!vis[i]) {
            if (vmx == a[i]) mx.push_back(i);
            else other.push_back(i);
        }
    }
        seg.push_back({});
    for (int i = 0; i < mx.size(); i++) {
        seg.back().push_back(mx[i]);
        if (other.size() > i) seg.back().push_back(other[i]);
    }
    for (int i = seg.size() - 2; i >= 0; i--) {
        if (a[seg[i].back()] == a[seg[i + 1][0]]) {
            for (int j = 0; j < seg[i].size(); j += 2) {
                std::swap(seg[i][j], seg[i][j + 1]);
            }
        }
    }
        std::vector<int> ans;
    for (auto s : seg) {
        ans.insert(ans.end(), s.begin(), s.end());
    }
    for (int i = 2; i < n; i++) {
        assert(ans[i] > ans[i - 2]);
    }
    for (int i = 1; i < n; i++) {
        assert(a[ans[i]] != a[ans[i - 1]]);
    }
    for (int i = 0; i < n; i++) {
        std::cout << ans[i] + 1 << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}