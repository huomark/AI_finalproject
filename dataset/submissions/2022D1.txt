#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 int query(int i, int j) {
    std::cout << "? " << i + 1 << " " << j + 1 << std::endl;
    int res;
    std::cin >> res;
        return res ^ 1;
}
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 1; i < n; i++) {
        a[i] = a[i - 1] ^ query(i - 1, i);
    }
        int lo = 0, hi = n - 1;
    while (lo + 1 < hi) {
        int x = (lo + hi) / 2;
        if (a[lo] ^ a[x] ^ query(x, lo)) {
            hi = x;
        } else {
            lo = x + 1;
        }
    }
        if (lo + 1 == hi) {
        if (lo > 0 ? a[lo - 1] ^ a[lo] ^ query(lo, lo - 1) : !(a[hi] ^ a[hi + 1] ^ query(hi + 1, hi))) {
            hi = lo;
        } else {
            lo = hi;
        }
    }
        std::cout << "! " << lo + 1 << std::endl;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}