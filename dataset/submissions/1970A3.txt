#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        std::string s;
    std::cin >> s;
        const int n = s.size();
        int res = 0;
        std::vector<std::vector<int>> vec;
    int i = 0;
    while (i < n) {
        vec.push_back({});
        if (i == 0) {
            vec.back().push_back({});
        }
        while (i < n && (res > 0 || s[i] == '(')) {
            if (s[i] == '(') {
                vec.back().back()++;
            } else {
                vec.back().push_back({});
                res--;
            }
            i++;
        }
        res = std::accumulate(vec.back().begin(), vec.back().end(), 0);
    }
        std::string ans;
    std::vector<int> cur(vec.size());
    auto dfs = [&](auto self, int i) -> void {
        int t = vec[i][cur[i]++];
        if (i > 0) {
            ans += ')';
        }
        for (int x = 0; x < t; x++) {
            self(self, i + 1);
        }
        if (i > 0) {
            ans += '(';
        }
    };
    dfs(dfs, 0);
    std::reverse(ans.begin(), ans.end());
    std::cout << ans << "\n";
        return 0;
}