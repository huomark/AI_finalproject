#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 char get() {
    char c;
    std::cin >> c;
        if (c == 'X' || c == '0') {
        std::exit(0);
    }
        return c;
}
 void report(int i, int j) {
    std::cout << i << " " << j << std::endl;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        std::string s;
    s += get();
    report(0, 0);
        int st = (s[0] - 'a') * 3;
    int l = 0;
    int r = 1;
        while (true) {
        // std::cerr << s << " " << st << " " << l << " " << r << "\n";
        // if (st == -1) {
        //     std::cerr << "?\n";
        //     return 0;
        // }
        // if (s.size() % 2 == 1) {
        //     assert(s == std::string(s.rbegin(), s.rend()));
        // }
        char c = get();
        s += c;
        if (st == 0) {
            if (c == 'a') {
                std::swap(s[r], s.back());
                report(r + 1, s.size());
                st = 4;
            } else if (r - l >= 3) {
                report(0, 0);
                st = 5;
            } else {
                std::swap(s[l], s[l + 1]);
                report(l + 1, l + 2);
                r += 2;
                st = 6;
            }
        } else if (st == 1) {
            assert(r - l >= 3);
            if (c == 'a') {
                int mid = (l + r) / 2;
                std::swap(s[mid], s.back());
                report(mid + 1, s.size());
                st = 5;
            } else {
                int mid = (l + r) / 2;
                std::swap(s[l + 1], s[mid]);
                report(l + 2, mid + 1);
                st = 10;
            }
        } else if (st == 2) {
            assert(r - l >= 3);
            if (c == 'a') {
                std::swap(s[l], s.back());
                report(l + 1, s.size());
                st = 7;
            } else {
                int mid = (l + r) / 2;
                std::swap(s[mid], s[mid + 1]);
                report(mid + 1, mid + 2);
                st = 8;
            }
        } else if (st == 3) {
            if (c == 'a') {
                int mid = (l + r) / 2;
                std::swap(s[mid + 1], s.back());
                report(mid + 2, s.size());
                st = 8;
            } else {
                report(0, 0);
                st = 9;
            }
        } else if (st == 4) {
            r += 2;
            if (c == 'a') {
                report(0, 0);
                st = 0;
            } else {
                int mid = s.size() / 2;
                std::swap(s[mid], s.back());
                report(mid + 1, s.size());
                st = 1;
            }
        } else if (st == 5) {
            assert(r - l >= 3);
            if (c == 'a') {
                r += 2;
                int mid = (l + r) / 2;
                std::swap(s[mid], s[r - 2]);
                report(mid + 1, r - 1);
                st = 1;
            } else {
                l += 2;
                std::swap(s[l - 1], s.back());
                report(l, s.size());
                st = 0;
            }
        } else if (st == 6) {
            assert(r - l == 3);
            if (c == 'a') {
                std::swap(s[l], s[l + 1]);
                report(l + 1, l + 2);
                st = 1;
            } else {
                std::swap(s[r - 1], s.back());
                report(r, s.size());
                st = 2;
            }
        } else if (st == 7) {
            assert(r - l >= 3);
            if (c == 'a') {
                int mid = (l + r) / 2;
                std::swap(s[mid], s[mid + 1]);
                report(mid + 1, mid + 2);
                l += 2;
                st = r - l == 1 ? 0 : 2;
            } else {
                int mid = (l + r) / 2;
                std::swap(s[mid], s.back());
                report(mid + 1, s.size());
                l += 2;
                st = 3;
            }
        } else if (st == 8) {
            if (c == 'a') {
                int mid = (l + r) / 2;
                std::swap(s[l], s[mid + 1]);
                report(l + 1, mid + 2);
                if (r - l == 1) {
                    r += 2;
                    st = 1;
                } else {
                    l += 2;
                    st = 3;
                }
            } else {
                std::swap(s[r + 1], s.back());
                report(r + 2, s.size());
                r += 2;
                st = 2;
            }
        } else if (st == 9) {
            if (c == 'a') {
                int mid = (l + r) / 2;
                std::swap(s[mid + 1], s[r + 1]);
                report(mid + 2, r + 2);
                r += 2;
                st = 2;
            } else {
                std::swap(s[r + 1], s.back());
                report(r + 2, s.size());
                r += 2;
                st = 3;
            }
        } else if (st == 10) {
            l += 2;
            if (c == 'a') {
                report(0, 0);
                st = 0;
            } else {
                int mid = (l + r) / 2;
                std::swap(s[mid], s.back());
                report(mid + 1, s.size());
                st = r - l == 1 ? 3 : 1;
            }
        }
    }
        return 0;
}