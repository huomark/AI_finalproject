#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<std::string> s(n);
    std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> s[i];
        for (int j = 0; j < s[i].size(); j++) {
            a[i] |= (s[i][j] - '0') << j;
        }
    }
        int m = s[0].size();
        std::vector<int> dp(1 << (m + 1), -1E9);
    dp[1] = 0;
        int add = 0;
        for (int i = 1; i < n; i++) {
        int f = 0;
        for (int len = 0; len <= m; len++) {
            f = std::max(f, add + dp[1 << len | (a[i] & ((1 << len) - 1))] + len);
        }
                int mxlen = 0; 
        for (int len = m; len > 0; len--) {
            if ((a[i] & ((1 << len) - 1)) == (a[i - 1] >> (m - len))) {
                mxlen = len;
                break;
            }
        }
        add += mxlen;
                for (int len = 0; len <= m; len++) {
            int &res = dp[1 << len | (a[i - 1] >> (m - len))];
            res = std::max(res, f - add);
        }
    }
        int ans = n * m;
    ans -= *std::max_element(dp.begin(), dp.end()) + add;
    std::cout << ans << "\n";
        return 0;
}