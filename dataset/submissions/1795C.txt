#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n), b(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    for (int i = 0; i < n; i++) {
        std::cin >> b[i];
    }
        std::vector<i64> s(n + 1);
    for (int i = 0; i < n; i++) {
        s[i + 1] = s[i] + b[i];
    }
        std::vector<int> d(n);
    std::vector<i64> ans(n);
        for (int i = 0; i < n; i++) {
        int j = std::lower_bound(s.begin() + i, s.end(), a[i] + s[i]) - s.begin() - 1;
                if (j > i) {
            d[i]++;
            if (j < n) {
                d[j]--;
            }
        }
                if (j < n) {
            ans[j] += a[i] - (s[j] - s[i]);
        }
    }
        for (int i = 1; i < n; i++) {
        d[i] += d[i - 1];
    }
    for (int i = 0; i < n; i++) {
        ans[i] += 1LL * d[i] * b[i];
        std::cout << ans[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}