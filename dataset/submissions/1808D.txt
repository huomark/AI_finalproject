#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, k;
    std::cin >> n >> k;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i] = 2 * a[i] - i % 2;
    }
        i64 ans = 1LL * (k / 2) * (n - k + 1);
        int m = *std::max_element(a.begin(), a.end()) + 1;
        std::vector<std::vector<int>> adj(m);
    for (int i = 0; i < n; i++) {
        adj[a[i]].push_back(i);
    }
    for (auto v : adj) {
        for (int i = 0, j = 0, x = v.size(), y = v.size(); i < v.size(); i++) {
            while (v[i] - v[j] >= k) {
                j++;
            }
            while (x > 0 && v[x - 1] + v[i] >= k - 1) {
                x -= 1;
            }
            while (y > 0 && v[y - 1] + v[i] >= 2 * n - k) {
                y -= 1;
            }
            ans -= std::max(0, std::min(i, y) - std::max(x, j));
        }
    }
    std::cout << ans << "\n";
        return 0;
}