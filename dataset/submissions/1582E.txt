#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<i64> s(n + 1);
    for (int i = 0; i < n; i++) {
        s[i + 1] = s[i] + a[i];
    }
        std::vector<i64> dp(n + 1, 1E18);
    for (int ans = 1; ; ans++) {
        for (int i = 0; i <= n; i++) {
            if (i > n - ans) {
                dp[i] = 0;
            } else {
                dp[i] = dp[i + ans] > s[i + ans] - s[i] ? s[i + ans] - s[i] : 0;
            }
        }
        for (int i = n - 1; i >= 0; i--) {
            dp[i] = std::max(dp[i], dp[i + 1]);
        }
        if (dp[0] == 0) {
            std::cout << ans - 1 << "\n";
            return;
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}