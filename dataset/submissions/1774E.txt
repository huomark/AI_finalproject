#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, d;
    std::cin >> n >> d;
        std::vector<std::vector<int>> adj(n);
    for (int i = 1; i < n; i++) {
        int u, v;
        std::cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
        std::vector<int> f1(n, -n), f2(n, -n);
        int m1;
    std::cin >> m1;
        for (int i = 0; i < m1; i++) {
        int x;
        std::cin >> x;
        x--;
                f1[x] = 0;
    }
        int m2;
    std::cin >> m2;
        for (int i = 0; i < m2; i++) {
        int x;
        std::cin >> x;
        x--;
                f2[x] = 0;
    }
        auto dfs = [&](auto self, int x, int p) -> void {
        for (auto y : adj[x]) {
            if (y == p) {
                continue;
            }
            self(self, y, x);
            f1[x] = std::max(f1[x], f1[y] + 1);
            f2[x] = std::max(f2[x], f2[y] + 1);
        }
        f1[x] = std::max(f1[x], f2[x] - d);
        f2[x] = std::max(f2[x], f1[x] - d);
    };
    dfs(dfs, 0, -1);
        int ans = 0;
    for (int i = 1; i < n; i++) {
        ans += (f1[i] >= 0) + (f2[i] >= 0);
    }
    ans *= 2;
        std::cout << ans << "\n";
        return 0;
}