#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<std::vector<int>> adj(n);
    for (int i = 1; i < n; i++) {
        int u, v;
        std::cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
        std::vector<int> leaf(n);
        int cnt = 0;
        std::function<void(int, int)> dfs = [&](int x, int p) {
        leaf[x] = x;
        for (auto y : adj[x]) {
            if (y == p) {
                continue;
            }
            dfs(y, x);
            leaf[x] = leaf[y];
        }
        if (leaf[x] == x) {
            cnt++;
        }
    };
    dfs(0, -1);
        std::vector<int> a(cnt), pos(n);
    for (int i = 0; i < cnt; i++) {
        std::cin >> a[i];
        a[i]--;
        pos[a[i]] = i;
    }
        std::vector<int> ans, b;
    dfs = [&](int x, int p) {
        ans.push_back(x);
        std::sort(adj[x].begin(), adj[x].end(), [&](int x, int y) {
            return pos[leaf[x]] < pos[leaf[y]];
        });
        for (auto y : adj[x]) {
            if (y == p) {
                continue;
            }
            dfs(y, x);
            ans.push_back(x);
        }
        if (leaf[x] == x) {
            b.push_back(x);
        }
    };
    dfs(0, -1);
        if (a != b) {
        std::cout << -1 << "\n";
        return 0;
    }
        for (auto x : ans) {
        std::cout << x + 1 << " ";
    }
    std::cout << "\n";
        return 0;
}