#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector pre(30, std::vector<int>(n + 1));
    for (int i = 0; i < 30; i++) {
        for (int j = 0; j < n; j++) {
            pre[i][j + 1] = pre[i][j] + (a[j] >> i & 1);
        }
    }
        auto calc = [&](int l, int r) {
        int res = 0;
        for (int i = 0; i < 30; i++) {
            if (pre[i][r] - pre[i][l] != 0) {
                res |= 1 << i;
            }
        }
        return res;
    };
        int ans = 1;
    for (int i = 1; i < n; i++) {
        while (ans <= i && calc(i - ans, i) != calc(i - ans + 1, i + 1)) {
            ans++;
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}