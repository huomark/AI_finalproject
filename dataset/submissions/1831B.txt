#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i]--;
    }
    std::vector<int> b(n);
    for (int i = 0; i < n; i++) {
        std::cin >> b[i];
        b[i]--;
    }
        std::vector<int> fa(2 * n), fb(2 * n);
    int len = 0;
    for (int i = 0; i < n; i++) {
        if (i > 0 && a[i] != a[i - 1]) {
            len = 0;
        }
        len++;
        fa[a[i]] = std::max(fa[a[i]], len);
    }
    len = 0;
    for (int i = 0; i < n; i++) {
        if (i > 0 && b[i] != b[i - 1]) {
            len = 0;
        }
        len++;
        fb[b[i]] = std::max(fb[b[i]], len);
    }
    int ans = 0;
    for (int i = 0; i < 2 * n; i++) {
        ans = std::max(ans, fa[i] + fb[i]);
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}