#include <bits/stdc++.h>
 using i64 = long long;
 char get(int x, int y) {
    return 'a' + x % 5 * 5 + y % 5;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, m, a, b, c;
    std::cin >> n >> m >> a >> b >> c;
        if (n * m % 2 == 1) {
        std::cout << "IMPOSSIBLE\n";
        return 0;
    }
        int mina = n % 2 * m / 2;
    int minb = m % 2 * n / 2;
        if (a < mina || b < minb) {
        std::cout << "IMPOSSIBLE\n";
        return 0;
    }
        if ((a - mina) % 2) {
        a -= 1;
    }
    if ((b - minb) % 2) {
        b -= 1;
    }
        if (2 * a + 2 * b + 4 * c < n * m) {
        std::cout << "IMPOSSIBLE\n";
        return 0;
    }
        std::vector s(n, std::string(m, '.'));
    if (n % 2) {
        for (int j = 0; j < m; j += 2) {
            s[n - 1][j] = get(n - 1, j);
            s[n - 1][j + 1] = get(n - 1, j);
            a -= 1;
        }
    }
    if (m % 2) {
        for (int i = 0; i < n; i += 2) {
            s[i][m - 1] = get(i, m - 1);
            s[i + 1][m - 1] = get(i, m - 1);
            b -= 1;
        }
    }
        for (int i = 0; i + 1 < n; i += 2) {
        for (int j = 0; j + 1 < m; j += 2) {
            if (c) {
                s[i][j] = get(i, j);
                s[i][j + 1] = get(i, j);
                s[i + 1][j] = get(i, j);
                s[i + 1][j + 1] = get(i, j);
                c -= 1;
            } else if (a) {
                s[i][j] = get(i, j);
                s[i][j + 1] = get(i, j);
                s[i + 1][j] = get(i + 1, j);
                s[i + 1][j + 1] = get(i + 1, j);
                a -= 2;
            } else {
                s[i][j] = get(i, j);
                s[i][j + 1] = get(i, j + 1);
                s[i + 1][j] = get(i, j);
                s[i + 1][j + 1] = get(i, j + 1);
                b -= 2;
            }
        }
    }
        for (int i = 0; i < n; i++) {
        std::cout << s[i] << "\n";
    }
        return 0;
}