#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 constexpr int inf = 1E9;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::array<int, 3> dp {0, -inf, -inf};
    for (int i = 0; i < n; i++) {
        dp[2] = std::max(dp[2], dp[1]);
        dp[1] = std::max(dp[1], dp[0]);
        for (int j = 0; j < 3; j++) {
            if (j == 1) {
                continue;
            }
            int &x = dp[j];
            if (a[i] > x) {
                x++;
            } else if (a[i] < x) {
                x--;
            }
        }
    }
        std::cout << std::max(dp[1], dp[2]) << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}