#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> p(n * 2);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int g;
            std::cin >> g;
            p[i + j + 1] = g;
        }
    }
    p[0] = 2 * n * (2 * n + 1) / 2 - std::accumulate(p.begin() + 1, p.end(), 0);
        for (int i = 0; i < 2 * n; i++) {
        std::cout << p[i] << " \n"[i == 2 * n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}