#include <bits/stdc++.h>
 using i64 = long long;
 constexpr i64 inf = 1E9;
 int power(int a, int b) {
    int res = 1;
    for (; b; b /= 2, a = std::min(inf, 1LL * a * a)) {
        if (b & 1) {
            res = std::min(inf, 1LL * res * a);
        }
    }
    return res;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, l, r;
    std::cin >> n >> l >> r;
        i64 ans = 0;
        n--;
    if (n == 0) {
        ans = r - l + 1;
    } else if (n == 1) {
        ans = 1LL * (r - l + 1) * (r - l);
    } else {
        for (int x = 1; power(x, n) <= r; x++) {
            for (int y = 1; power(y, n) <= r; y++) {
                if (std::gcd(x, y) == 1 && x + y > 2) {
                    int hi = r / power(std::max(x, y), n);
                    int lo = (l - 1) / power(std::min(x, y), n) + 1;
                    ans += std::max(0, hi - lo + 1);
                }
            }
        }
    }
    std::cout << ans << "\n";
        return 0;
}