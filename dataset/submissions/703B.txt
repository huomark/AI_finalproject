#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, k;
    std::cin >> n >> k;
        std::vector<int> c(n);
    for (int i = 0; i < n; i++) {
        std::cin >> c[i];
    }
        i64 ans = 0;
    for (int i = 0; i < n; i++) {
        ans += c[i] * c[(i + 1) % n];
    }
        int sum = std::accumulate(c.begin(), c.end(), 0);
        std::vector<int> id(k);
    int sumcap = 0;
    for (int i = 0; i < k; i++) {
        std::cin >> id[i];
        id[i]--;
        sumcap += c[id[i]];
        ans += 1LL * (sum - sumcap) * c[id[i]];
        ans -= c[id[i]] * c[(id[i] + 1) % n];
        ans -= c[id[i]] * c[(id[i] - 1 + n) % n];
    }
        std::sort(id.begin(), id.end());
    for (int i = 1; i < k; i++) {
        if (id[i] == id[i - 1] + 1) {
            ans += c[id[i]] * c[id[i - 1]];
        }
    }
    if (id[0] == 0 && id[k - 1] == n - 1) {
        ans += c[0] * c[n - 1];
    }
    std::cout << ans << "\n";
        return 0;
}