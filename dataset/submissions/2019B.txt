#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n, q;
    std::cin >> n >> q;
        std::vector<int> x(n);
    for (int i = 0; i < n; i++) {
        std::cin >> x[i];
    }
        std::map<i64, int> mp;
    for (int i = 0; i < n; i++) {
        mp[1LL * (i + 1) * (n - i) - 1] += 1;
    }
    for (int i = 1; i < n; i++) {
        mp[1LL * i * (n - i)] += x[i] - x[i - 1] - 1;
    }
        for (int i = 0; i < q; i++) {
        i64 k;
        std::cin >> k;
                std::cout << (mp.contains(k) ? mp[k] : 0) << " \n"[i == q - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}