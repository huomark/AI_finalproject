#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, a, b;
    std::cin >> n >> a >> b;
    a--, b--;
        std::vector<std::vector<std::array<int, 2>>> adj(n);
    for (int i = 1; i < n; i++) {
        int x, y, z;
        std::cin >> x >> y >> z;
        x--, y--;
        adj[x].push_back({y, z});
        adj[y].push_back({x, z});
    }
        std::vector<int> f(n);
    std::set<int> s;
    std::function<void(int, int, int)> dfs = [&](int x, int t, int p) {
        if (x != b) {
            s.insert(f[x]);
        }
        for (auto [y, z] : adj[x]) {
            if (y == p || y == t) {
                continue;
            }
            f[y] = f[x] ^ z;
            dfs(y, t, x);
        }
    };
        f[a] = 0;
    dfs(a, b, -1);
    auto t = s;
    s.clear();
        f[b] = 0;
    dfs(b, -1, -1);
        for (auto x : s) {
        if (t.count(x)) {
            std::cout << "YES\n";
            return;
        }
    }
        std::cout << "NO\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}