#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int N = 300 * 300;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        int sum = std::accumulate(a.begin(), a.end(), 0);
        std::vector<std::bitset<N + 1>> f(n + 1);
    f[0][0] = 1;
    for (int i = 0; i < n; i++) {
        f[i + 1] = f[i] | f[i] << a[i];
    }
        if (sum % 2 == 0 && f[n][sum / 2]) {
        std::cout << "Second" << std::endl;
        int s = sum / 2;
        std::vector<int> bel(n);
        for (int i = n - 1; i >= 0; i--) {
            if (f[i][s]) {
                bel[i] = 1;
            } else {
                s -= a[i];
            }
        }
        while (true) {
            int i;
            std::cin >> i;
            if (i == 0) {
                return 0;
            }
            i--;
                        int j = 0;
            while (a[j] == 0 || bel[j] == bel[i]) {
                j++;
            }
            std::cout << j + 1 << std::endl;
            int d = std::min(a[i], a[j]);
            a[i] -= d;
            a[j] -= d;
        }
    } else {
        std::cout << "First" << std::endl;
                while (true) {
            int i = 0;
            while (a[i] == 0) {
                i++;
            }
            std::cout << i + 1 << std::endl;
                        int j;
            std::cin >> j;
                        if (j == 0) {
                return 0;
            }
            j--;
            int d = std::min(a[i], a[j]);
            a[i] -= d;
            a[j] -= d;
        }
    }
        return 0;
}