#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, m;
    std::cin >> n >> m;
        std::vector<std::vector<int>> adj(n);
    for (int i = 0; i < m; i++) {
        int u, v;
        std::cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
    }
        std::vector<int> vis(n, -1);
    int x = 0, t = 0;
    while (vis[x] == -1) {
        vis[x] = t;
        t++;
        x = adj[x][0];
    }
        int d = t - vis[x];
        for (int t = d; ; t--) {
        if (d % t == 0) {
            std::vector<int> f(n, -1);
            std::queue<int> q;
            f[0] = 0;
            q.push(0);
            std::vector<int> ans;
            bool ok = true;
            while (!q.empty()) {
                int x = q.front();
                q.pop();
                                if (f[x] == 0) {
                    ans.push_back(x);
                }
                                for (auto y : adj[x]) {
                    if (f[y] == -1) {
                        f[y] = (f[x] + 1) % t;
                        q.push(y);
                    } else if (f[y] != (f[x] + 1) % t) {
                        ok = false;
                    }
                }
            }
            if (!ok) {
                continue;
            }
            std::cout << t << "\n";
            std::cout << ans.size() << "\n";
            std::sort(ans.begin(), ans.end());
            for (auto x : ans) {
                std::cout << x + 1 << " \n"[x == ans.back()];
            }
            return 0;
        }
    }
        return 0;
}