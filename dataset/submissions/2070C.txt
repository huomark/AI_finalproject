#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
using i128 = __int128;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::string s;
    std::cin >> s;
        s = 'R' + s + 'R';
        int ans = 0;
    std::vector<int> a(n + 1);
    for (int i = 1; i <= n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> l(n + 2), r(n + 2);
    for (int i = 1; i <= n + 1; i++) {
        l[i] = i - 1;
        r[i - 1] = i;
    }
        std::vector<int> p(n);
    std::iota(p.begin(), p.end(), 1);
    std::sort(p.begin(), p.end(),
        [&](int i, int j) {
            return a[i] < a[j];
        });
        int cost = 0;
    for (int i = 1; i <= n + 1; i++) {
        cost += (s[i] != s[i - 1]);
    }
    for (auto i : p) {
        if (cost <= 2 * k) {
            break;
        }
        cost -= (s[i] != s[l[i]]);
        cost -= (s[i] != s[r[i]]);
        cost += (s[l[i]] != s[r[i]]);
        r[l[i]] = r[i];
        l[r[i]] = l[i];
        ans = a[i];
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}