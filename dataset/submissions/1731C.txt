#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n + 1);
    int mx = 0;
    for (int i = 0; i < n; i++) {
        int x;
        std::cin >> x;
        mx = std::max(mx, a[i + 1] = a[i] ^ x);
    }
        int m = 1;
    while (m <= mx) m *= 2;
        std::vector<i64> f(m);
    for (int i = 0; i <= n; i++) {
        f[a[i]]++;
    }
        for (int i = 1; i < m; i *= 2) {
        for (int j = 0; j < m; j += 2 * i) {
            for (int k = 0; k < i; k++) {
                auto a = f[j + k], b = f[i + j + k];
                f[j + k] = a + b;
                f[i + j + k] = a - b;
            }
        }
    }
        for (int i = 0; i < m; i++) {
        f[i] *= f[i];
    }
        for (int i = 1; i < m; i *= 2) {
        for (int j = 0; j < m; j += 2 * i) {
            for (int k = 0; k < i; k++) {
                auto a = f[j + k], b = f[i + j + k];
                f[j + k] = a + b;
                f[i + j + k] = a - b;
            }
        }
    }
        for (int i = 0; i < m; i++) {
        f[i] /= m;
    }
    f[0] -= n + 1;
    for (int i = 0; i < m; i++) {
        f[i] /= 2;
    }
        i64 ans = 1LL * n * (n + 1) / 2;
    for (int i = 0; i * i < m; i++) {
        ans -= f[i * i];
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}