#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::string a, b;
    std::cin >> a >> b;
        std::vector<int> ans;
    if (a == b) {
        std::cout << 0 << "\n";
        return;
    }
        std::vector<int> A(n), B(n);
    for (int i = 0; i < n; i++) {
        A[i] = a[i] - '0';
        B[i] = b[i] - '0';
    }
    if (std::count(A.begin(), A.end(), 1) == 0) {
        std::cout << -1 << "\n";
        return;
    }
    if (std::count(B.begin(), B.end(), 1) == 0) {
        std::cout << -1 << "\n";
        return;
    }
        int x = std::find(A.begin(), A.end(), 1) - A.begin();
    int y = std::find(B.begin(), B.end(), 1) - B.begin();
        if (x > y) {
        int d = x - y;
        for (int i = 0; i + d < n; i++) {
            A[i] ^= A[i + d];
        }
        ans.push_back(d);
        x = y;
    }
    for (int i = x + 1; i < n; i++) {
        if (A[i] != B[i]) {
            int d = i - x;
            for (int j = n - 1; j >= d; j--) {
                A[j] ^= A[j - d];
            }
            ans.push_back(-d);
        }
    }
    int z = n - 1;
    while (A[z] == 0) {
        z--;
    }
    for (int i = x; i >= 0; i--) {
        if (A[i] != B[i]) {
            int d = z - i;
            for (int j = d; j < n; j++) {
                A[j - d] ^= A[j];
            }
            ans.push_back(d);
        }
    }
    std::cout << ans.size() << "\n";
    for (int i = 0; i < ans.size(); i++) {
        std::cout << ans[i] << " \n"[i == ans.size() - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}