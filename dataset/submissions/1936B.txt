#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::string s;
    std::cin >> s;
        std::vector<int> l, r;
    for (int i = 0; i < n; i++) {
        if (s[i] == '<') {
            l.push_back(i);
        } else {
            r.push_back(i);
        }
    }
    std::vector<i64> sl(l.size() + 1), sr(r.size() + 1);
    for (int i = 0; i < l.size(); i++) {
        sl[i + 1] = sl[i] + l[i];
    }
    for (int i = 0; i < r.size(); i++) {
        sr[i + 1] = sr[i] + r[i];
    }
        for (int i = 0; i < n; i++) {
        int a = std::lower_bound(r.begin(), r.end(), i + 1) - r.begin();
        int b = std::lower_bound(l.begin(), l.end(), i) - l.begin();
                i64 ans = 0;
        if (s[i] == '<') {
            if (l.size() - b > a) {
                ans = 2 * (sl[b + 1 + a] - sl[b + 1]) - 2 * sr[a] + i + 1;
            } else {
                int t = l.size() - b;
                ans = 2 * (sl[b + t] - sl[b + 1]) - 2 * (sr[a] - sr[a - t]) + i + n;
            }
        } else {
            if (a > l.size() - b) {
                int t = l.size() - b;
                ans = 2 * (sl[b + t] - sl[b]) - 2 * (sr[a - 1] - sr[a - 1 - t]) + n - i;
            } else {
                ans = 2 * (sl[b + a] - sl[b]) - 2 * sr[a - 1] - i + 1;
            }
        }
        std::cout << ans << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}