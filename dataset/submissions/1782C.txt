#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::string s;
    std::cin >> n >> s;
        int ans = n + 1;
    std::string t = s;
    for (int c = 1; c <= 26; c++) {
        int freq[26] {};
        for (int i = 0; i < n; i++) {
            freq[s[i] - 'a']++;
        }
        if (n % c) continue;
        int p[26] {};
        std::iota(p, p + 26, 0);
        int res = 0;
        std::sort(p, p + 26, [&](int i, int j) {
            return std::abs(freq[i] - n / c) - freq[i] < std::abs(freq[j] - n / c) - freq[j];
        });
        int use[26] {};
        for (int i = 0; i < c; i++) {
            use[p[i]] = 1;
            res += std::abs(freq[p[i]] - n / c);
        }
        for (int i = c; i < 26; i++) {
            res += freq[p[i]];
        }
        res /= 2;
        if (res >= ans) continue;
        t = s;
        for (auto &ch : t) {
            int x = ch - 'a';
            int need = use[x] ? n / c : 0;
            if (need < freq[x]) {
                for (int i = 0; i < c; i++) {
                    if (freq[p[i]] < n / c) {
                        ch = 'a' + p[i];
                        freq[x]--;
                        freq[p[i]]++;
                        break;
                    }
                }
            }
        }
        ans = res;
    }
    std::cout << ans << "\n";
    std::cout << t << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}