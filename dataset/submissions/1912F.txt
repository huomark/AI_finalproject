#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<std::vector<int>> adj(n);
    for (int i = 1; i < n; i++) {
        int u, v;
        std::cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
        std::vector dis(n, std::vector<int>(n, -1));
    for (int s = 0; s < n; s++) {
        std::queue<int> q;
        q.push(s);
        dis[s][s] = 0;
        while (!q.empty()) {
            int x = q.front();
            q.pop();
                        for (auto y : adj[x]) {
                if (dis[s][y] == -1) {
                    dis[s][y] = dis[s][x] + 1;
                    q.push(y);
                }
            }
        }
    }
        std::vector<int> leaves;
    for (int i = 0; i < n; i++) {
        if (adj[i].size() == 1) {
            leaves.push_back(i);
        }
    }
        int s;
    std::cin >> s;
    s--;
        std::vector<double> f(n, 1);
        for (int t = 0; t < 10000; t++) {
        for (auto x : leaves) {
            double num = 0;
            double den = 0;
            for (auto y : leaves) {
                if (y != x) {
                    num += 1 + dis[x][y] / f[y];
                    den += 1.0 / f[y];
                }
            }
            f[x] = (num - 1) / den;
        }
    }
        double num = 0;
    double den = 0;
    for (auto y : leaves) {
        if (y != s) {
            num += 1 + dis[s][y] / f[y];
            den += 1.0 / f[y];
        }
    }
    double ans = (num - 1) / den;
    std::cout << std::fixed << std::setprecision(10) << ans << "\n";
        return 0;
}