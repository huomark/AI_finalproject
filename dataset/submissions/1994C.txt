#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, x;
    std::cin >> n >> x;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<i64> s(n + 1);
    for (int i = 0; i < n; i++) {
        s[i + 1] = s[i] + a[i];
    }
        i64 ans = 1LL * n * (n + 1) / 2;
    std::vector<int> dp(n + 1);
    dp[n] = 1;
    for (int i = n - 1, j = n + 1; i >= 0; i--) {
        while (s[j - 1] - s[i] > x) {
            j--;
        }
        dp[i] = 1 + (j <= n ? dp[j] : 0);
        ans -= dp[i] - 1;
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}