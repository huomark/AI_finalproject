#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        int ans = 0;
    std::vector<std::vector<int>> adj(n);
    for (int i = 1; i < n; i++) {
        int u, v;
        std::cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
        std::vector<int> d(n), dia(n);
    std::function<void(int, int)> dfs = [&](int x, int p) {
        d[x] = dia[x] = 0;
        for (auto y : adj[x]) {
            if (y != p) {
                dfs(y, x);
                dia[x] = std::max({dia[x], dia[y], d[x] + d[y] + 1});
                d[x] = std::max(d[x], d[y] + 1);
            }
        }
    };
    for (auto u = 0; u < n; u++) {
        for (auto v : adj[u]) {
            if (u < v) {
                dfs(u, v);
                dfs(v, u);
                ans = std::max(ans, dia[u] * dia[v]);
            }
        }
    }
    std::cout << ans << "\n";
        return 0;
}