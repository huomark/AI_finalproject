#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector nxt(n + 1, std::vector<int>(30, n));
    for (int i = n - 1; i >= 0; i--) {
        nxt[i] = nxt[i + 1];
        for (int j = 0; j < 30; j++) {
            if (~a[i] >> j & 1) {
                nxt[i][j] = i;
            }
        }
    }
        int q;
    std::cin >> q;
        while (q--) {
        int l, k;
        std::cin >> l >> k;
        l--;
        int ans = l;
        int res = n;
        for (int i = 29; i >= 0; i--) {
            if (k >> i & 1) {
                res = std::min(res, nxt[l][i]);
            } else {
                ans = std::max(ans, std::min(res, nxt[l][i]));
            }
        }
        ans = std::max(ans, res);
        if (ans <= l) {
            ans = -1;
        }
        std::cout << ans << " ";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}