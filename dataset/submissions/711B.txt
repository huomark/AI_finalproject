#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector a(n, std::vector<i64>(n));
    int r, c;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            std::cin >> a[i][j];
            if (a[i][j] == 0) {
                r = i, c = j;
            }
        }
    }
        if (n == 1) {
        std::cout << 1 << "\n";
        return 0;
    }
        i64 sum = std::accumulate(a[(r + 1) % n].begin(), a[(r + 1) % n].end(), 0LL);
    i64 csum = std::accumulate(a[r].begin(), a[r].end(), 0LL);
    i64 x = sum - csum;
    if (x <= 0) {
        std::cout << -1 << "\n";
        return 0;
    }
    a[r][c] = x;
        for (int i = 0; i < n; i++) {
        if (std::accumulate(a[i].begin(), a[i].end(), 0LL) != sum) {
            std::cout << -1 << "\n";
            return 0;
        }
        i64 sc = 0;
        for (int j = 0; j < n; j++) {
            sc += a[j][i];
        }
        if (sc != sum) {
            std::cout << -1 << "\n";
            return 0;
        }
    }
        i64 s1 = 0, s2 = 0;
    for (int i = 0; i < n; i++) {
        s1 += a[i][i];
        s2 += a[i][n - 1 - i];
    }
    if (s1 != sum || s2 != sum) {
        std::cout << -1 << "\n";
        return 0;
    }
    std::cout << x << "\n";
        return 0;
}