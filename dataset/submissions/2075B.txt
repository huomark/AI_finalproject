#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        if (k == 1) {
        int ans = std::max(a[0] + *std::max_element(a.begin() + 1, a.end()),
            a[n - 1] + *std::max_element(a.begin(), a.end() - 1));
        std::cout << ans << "\n";
        return;
    }
        std::nth_element(a.begin(), a.begin() + k, a.end(), std::greater());
        i64 ans = std::accumulate(a.begin(), a.begin() + k + 1, 0LL);
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}