#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n), x(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    for (int i = 0; i < n; i++) {
        std::cin >> x[i];
    }
        int ans = 0;
    for (int i = 0; i < n; i++) {
        int v = 0;
        for (int j = 29; j >= 0; j--) {
            int aj = a[i] >> j & 1;
            int xj = x[i] >> j & 1;
            if (aj > xj) {
                int p = __builtin_popcount(x[i] & ((1 << j) - 1));
                v = ((v + 1) << p) - 1;
                break;
            }
            if (xj) {
                v = 2 * v + aj;
            }
        }
        int sg;
        if (!((v + 2) & (v + 1))) {
            sg = 0;
        } else {
            int l = std::__lg(v);
            if (l % 2 == 1 && v == (1 << l)) {
                sg = l - 1;
            } else {
                sg = l + 1;
            }
        }
        ans ^= sg;
    }
    std::cout << (ans ? "Alice" : "Bob") << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}