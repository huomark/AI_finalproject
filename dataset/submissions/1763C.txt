#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        int max = *std::max_element(a.begin(), a.end());
        i64 ans;
    if (n == 2) {
        ans = std::max(a[0] + a[1], 2 * std::abs(a[0] - a[1]));
    } else if (n == 3) {
        ans = 3LL * std::max({a[0], a[2], std::abs(a[0] - a[1]), std::abs(a[1] - a[2])});
        ans = std::max(ans, 1LL * a[0] + a[1] + a[2]);
    } else {
        ans = 1LL * n * max;
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}