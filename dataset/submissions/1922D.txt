#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n), d(n), l(n), r(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    for (int i = 0; i < n; i++) {
        std::cin >> d[i];
    }
        for (int i = 0; i < n; i++) {
        l[i] = i - 1;
        r[i] = i + 1;
    }
    r[n - 1] = -1;
        std::vector<int> v;
    for (int i = 0; i < n; i++) {
        v.push_back(i);
    }
        std::vector<int> vis(n, -1);
    for (int i = 0; i < n; i++) {
        std::vector<int> die;
        for (auto x : v) {
            int sum = 0;
            if (l[x] != -1) {
                sum += a[l[x]];
            }
            if (r[x] != -1) {
                sum += a[r[x]];
            }
            if (sum > d[x]) {
                die.push_back(x);
            }
        }
        v.clear();
        std::cout << die.size() << " \n"[i == n - 1];
        for (auto x : die) {
            vis[x] = i;
        }
        for (auto x : die) {
            if (l[x] != -1) {
                r[l[x]] = r[x];
                if (vis[l[x]] < i) {
                    v.push_back(l[x]);
                    vis[l[x]] = i;
                }
            }
            if (r[x] != -1) {
                l[r[x]] = l[x];
                if (vis[r[x]] < i) {
                    v.push_back(r[x]);
                    vis[r[x]] = i;
                }
            }
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}