#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, b, x;
    std::cin >> n >> b >> x;
        std::vector<i64> a{0};
    i64 tot = 0;
    for (int i = 0; i < n; i++) {
        int c;
        std::cin >> c;
        tot += 1LL * c * (c - 1) / 2 * b;
        if (a.size() < c + 1) {
            a.resize(c + 1);
        }
        for (int k = 1; k <= c; k++) {
            i64 v = 1LL * (c / k) * (c / k - 1) / 2 * (k - c % k);
            v += 1LL * (c / k + 1) * (c / k) / 2 * (c % k);
            v *= b;
            a[k] += v;
            if (k < c) {
                a[k + 1] -= v;
            }
        }
    }
    i64 ans = 0;
    for (int i = 1; i < a.size(); i++) {
        a[i] += a[i - 1];
        ans = std::max(ans, tot - a[i] - 1LL * (i - 1) * x);
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}