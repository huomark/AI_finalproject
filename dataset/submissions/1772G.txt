#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    i64 x, y;
    std::cin >> n >> x >> y;
        std::vector<i64> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    std::sort(a.begin(), a.end());
        std::vector<i64> pre(n + 1);
    for (int i = 0; i < n; i++) {
        pre[i + 1] = std::max(pre[i], a[i] - i);
    }
        i64 ans = 0;
        int last = 0;
    while (x < y) {
        int j = std::upper_bound(pre.begin(), pre.end(), x) - pre.begin() - 1;
                if (x + j >= y) {
            ans += y - x;
            break;
        }
                int delta = j - (n - j);
        if (delta <= 0) {
            std::cout << -1 << "\n";
            return;
        }
        if (delta == last) {
            if (j == n || y < pre[j + 1]) {
                i64 k = (y - x - j + delta - 1) / delta;
                ans += k * n;
                x += delta * k;
                ans += y - x;
                break;
            } else {
                i64 k = std::max(1LL, (pre[j + 1] - x - j + delta - 1) / delta);
                ans += k * n;
                x += delta * k;
                continue;
            }
        }
        last = delta;
                x += delta;
        ans += n;
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}