#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<std::array<int, 2>> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i][0];
    }
    for (int i = 0; i < n; i++) {
        std::cin >> a[i][1];
    }
        std::sort(a.begin(), a.end(),
        [&](auto x, auto y) {
            return x[0] + x[1] < y[0] + y[1];
        });
        std::array<bool, 2> dp {true};
    for (int i = 1; i < n; i++) {
        std::array<bool, 2> ndp {};
        for (int x = 0; x < 2; x++) {
            if (!dp[x]) {
                continue;
            }
            for (int y = 0; y < 2; y++) {
                if (a[i][y] > a[i - 1][0] && a[i][y ^ 1] > a[i - 1][1]) {
                    ndp[x ^ (y ? i % 2 : 0)] = true;
                }
            }
        }
        dp = ndp;
    }
        if (dp[0] || (dp[1] && n % 2 == 1)) {
        std::cout << "YES\n";
    } else {
        std::cout << "NO\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}