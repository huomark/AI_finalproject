#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        int ans = a[n - 1];
    for (int i = 0; i < n - 1; i++) {
        int lo = 0, hi = 2E8;
        while (lo < hi) {
            int x = (lo + hi + 1) / 2;
            i64 cnt = 0;
            for (int j = i; j < n; j++) {
                if (a[j] < x - (j - i)) {
                    if (j == n - 1) {
                        cnt = k + 1;
                    }
                    cnt += x - (j - i) - a[j];
                } else {
                    break;
                }
            }
            if (cnt <= k) {
                lo = x;
            } else {
                hi = x - 1;
            }
        }
        ans = std::max(ans, lo);
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}