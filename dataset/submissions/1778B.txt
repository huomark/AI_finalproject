#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, m, d;
    std::cin >> n >> m >> d;
        std::vector<int> pos(n);
    for (int i = 0; i < n; i++) {
        int p;
        std::cin >> p;
        p--;
        pos[p] = i;
    }
        std::vector<int> a(m);
    for (int i = 0; i < m; i++) {
        std::cin >> a[i];
        a[i]--;
    }
        int ans = n;
    for (int i = 1; i < m; i++) {
        int x = pos[a[i - 1]], y = pos[a[i]];
        if (d >= n - 1) {
            ans = std::min(ans, std::max(0, y - x));
        } else {
            ans = std::min(ans, std::max(0, std::min(d + 1 - (y - x), y - x)));
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}