#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::string c;
    std::cin >> c;
        bool fR = false, fB = false;
    for (int i = 0; i < n; i++) {
        int j = (i + 1) % n;
        if (c[i] == c[j]) {
            if (c[i] == 'R') {
                fR = true;
            } else {
                fB = true;
            }
        }
    }
        if (fR && fB) {
        std::cout << "NO\n";
        return;
    }
        char part = fB ? 'R' : 'B';
    std::vector<int> p;
    for (int i = 0; i < n; i++) {
        if (c[i] == part) {
            p.push_back(i);
        }
    }
        if (p.size() <= 1) {
        std::cout << "YES\n";
        return;
    }
        std::vector<int> len;
    for (int i = 1; i < p.size(); i++) {
        len.push_back(p[i] - p[i - 1] - 1);
    }
    len.push_back(p[0] + n - 1 - p.back());
        if (std::count_if(len.begin(), len.end(),
        [&](int x) {
            return x % 2 == 0;
        }) == 1) {
        std::cout << "YES\n";
    } else {
        std::cout << "NO\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}