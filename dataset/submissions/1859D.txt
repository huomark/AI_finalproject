#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<std::array<int, 2>> seg(n);
    for (int i = 0; i < n; i++) {
        int l, r, a, b;
        std::cin >> l >> r >> a >> b;
        seg[i] = {l, b};
    }
    std::sort(seg.begin(), seg.end());
        std::vector<std::array<int, 2>> a;
    for (auto [l, r] : seg) {
        if (!a.empty() && l <= a.back()[1]) {
            a.back()[1] = std::max(a.back()[1], r);
        } else {
            a.push_back({l, r});
        }
    }
        int q;
    std::cin >> q;
    for (int i = 0; i < q; i++) {
        int x;
        std::cin >> x;
                int j = std::lower_bound(a.begin(), a.end(), std::array{x + 1, 0}) - a.begin() - 1;
        if (j >= 0) {
            x = std::max(x, a[j][1]);
        }
        std::cout << x << " \n"[i == q - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}