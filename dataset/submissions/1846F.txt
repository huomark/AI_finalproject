#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    i64 n;
    std::cin >> n;
        std::vector<int> a(n);
    std::vector<int> cnta(10);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        cnta[a[i]]++;
    }
        std::vector<int> b(n);
    auto cntb = cnta;
        while (cnta == cntb) {
        std::cout << "- " << 0 << std::endl;
        cntb.assign(10, 0);
        for (int i = 0; i < n; i++) {
            std::cin >> b[i];
            cntb[b[i]]++;
        }
    }
        int v = 0;
    while (cntb[v] <= cnta[v]) {
        v++;
    }
    std::vector<int> p;
    for (int i = 0; i < n; i++) {
        if (b[i] != v) {
            p.push_back(i + 1);
        }
    }
        std::cout << "- " << p.size();
    for (auto x : p) {
        std::cout << " " << x;
    }
    std::cout << std::endl;
        n = cntb[v];
    std::vector<int> c(n);
    for (int i = 0; i < n; i++) {
        std::cin >> c[i];
    }
        while (std::count(c.begin(), c.end(), v) == n) {
        std::cout << "- " << 0 << std::endl;
        for (int i = 0; i < n; i++) {
            std::cin >> c[i];
        }
    }
        for (int i = 0; i < n; i++) {
        if (c[i] != v) {
            std::cout << "! " << i + 1 << std::endl;
            return;
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        std::cout << std::fixed << std::setprecision(10);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}