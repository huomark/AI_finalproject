#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<int> p(n);
    for (int i = 0; i < n; i++) {
        std::cin >> p[i];
        p[i]--;
    }
        auto solve = [&]() {
        std::vector<int> ans(n + 1);
        for (int i = 0; i < n; i++) {
            if (p[i] <= i) {
                ans[0]++;
            }
            ans[(i - p[i] + n) % n]--;
        }
        ans.resize(n);
        for (int i = 1; i < n; i++) {
            ans[i]++;
            ans[i] += ans[i - 1];
        }
        return ans;
    };
        std::vector<int> ans[2];
    ans[0] = solve();
    std::reverse(p.begin() + 1, p.end());
    ans[1] = solve();
    std::reverse(ans[1].begin() + 1, ans[1].end());
        int k = 1, b = 0;
    std::cout << ans[k == 1 ? 0 : 1][b] << "\n";
        int q;
    std::cin >> q;
    while (q--) {
        int o;
        std::cin >> o;
                if (o == 1) {
            int v;
            std::cin >> v;
            b = (b + v * k + n) % n;
        } else if (o == 2) {
            int v;
            std::cin >> v;
            b = (b - v * k + n) % n;
        } else {
            k *= -1;
            b = (b + n + k) % n;
        }
        std::cout << ans[k == 1 ? 0 : 1][b] << "\n";
    }
        return 0;
}