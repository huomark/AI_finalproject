#include <bits/stdc++.h>
 using i64 = long long;
std::vector<int> minp, primes;
 void sieve(int n) {
    minp.assign(n + 1, 0);
    primes.clear();
        for (int i = 2; i <= n; i++) {
        if (minp[i] == 0) {
            minp[i] = i;
            primes.push_back(i);
        }
                for (auto p : primes) {
            if (i * p > n) {
                break;
            }
            minp[i * p] = p;
            if (p == minp[i]) {
                break;
            }
        }
    }
}
 void solve() {
    int n, m;
    std::cin >> n >> m;
        if (n > 1 && minp[n] <= m) {
        std::cout << "NO\n";
    } else {
        std::cout << "YES\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        sieve(1E6);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}