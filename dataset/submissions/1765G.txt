#include <bits/stdc++.h>
 using i64 = long long;
 std::mt19937 rng(std::chrono::steady_clock::now().time_since_epoch().count());
 int query(int t, int p) {
    std::cout << t << " " << p << std::endl;
    int ans;
    std::cin >> ans;
    return ans;
}
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
        if (query(1, 2) == 1) {
        a[1] = 0;
    } else {
        a[1] = 1;
    }
        std::vector<int> prev(n), val(n);
        for (int l = n; l > 2; ) {
        if (rng() % 2 == 0) {
            int x = query(1, l);
            if (x >= 2) {
                for (int j = l - x; j < l; j++) {
                    prev[j] = j - (l - x);
                    val[j] = 0;
                }
                l -= x;
            } else if (x == 0) {
                if (a[1] == 1) {
                    prev[l - 1] = 0;
                    val[l - 1] = 1;
                    prev[l - 2] = 0;
                    val[l - 2] = 1;
                    l -= 2;
                } else {
                    prev[l - 1] = 0;
                    val[l - 1] = 1;
                    l--;
                }
            } else {
                if (a[1] == 0) {
                    prev[l - 1] = 0;
                    val[l - 1] = 0;
                    prev[l - 2] = 0;
                    val[l - 2] = 1;
                    l -= 2;
                } else {
                    prev[l - 1] = 0;
                    val[l - 1] = 0;
                    l--;
                }
            }
        } else {
            int x = query(2, l);
            if (x >= 2) {
                for (int j = l - x; j < l; j++) {
                    prev[j] = j - (l - x);
                    val[j] = 1;
                }
                l -= x;
            } else if (x == 0) {
                if (a[1] == 1) {
                    prev[l - 1] = 0;
                    val[l - 1] = 0;
                    prev[l - 2] = 0;
                    val[l - 2] = 0;
                    l -= 2;
                } else {
                    prev[l - 1] = 0;
                    val[l - 1] = 0;
                    l--;
                }
            } else {
                if (a[1] == 0) {
                    prev[l - 1] = 0;
                    val[l - 1] = 1;
                    prev[l - 2] = 0;
                    val[l - 2] = 0;
                    l -= 2;
                } else {
                    prev[l - 1] = 0;
                    val[l - 1] = 1;
                    l--;
                }
            }
        }
    }
    for (int i = 2; i < n; i++) {
        a[i] = a[prev[i]] ^ val[i];
    }
        std::cout << 0 << " ";
    for (int i = 0; i < n; i++) {
        std::cout << a[i];
    }
    std::cout << std::endl;
        int ans;
    std::cin >> ans;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}