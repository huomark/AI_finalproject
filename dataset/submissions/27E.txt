#include <bits/stdc++.h>
 using i64 = long long;
 const int P[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43};
 i64 ans = 1E18;
void dfs(int n, int i, int last, i64 x) {
    if (n == 1) {
        ans = std::min(ans, x);
        return;
    }
    for (int e = 2; e <= n && e <= last; e++) {
        if (x > 1E18 / P[i]) {
            break;
        }
        x *= P[i];
        if (n % e == 0) {
            dfs(n / e, i + 1, e, x);
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        dfs(n, 0, 1E9, 1);
    std::cout << ans << "\n";
        return 0;
}