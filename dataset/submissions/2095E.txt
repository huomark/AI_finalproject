#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 int power(int a, int b, int p) {
    int res = 1;
    for (; b; b /= 2, a = 1LL * a * a % p) {
        if (b % 2) {
            res = 1LL * res * a % p;
        }
    }
    return res;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, p, k;
    std::cin >> n >> p >> k;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i] = 1LL * a[i] * a[i] % p * a[i] % p;
    }
        i64 ans = 0;
    std::map<int, int> cnt;
    for (int i = 0; i < n; i++) {
        if (a[i] == 0) {
            if (k == 0) {
                ans += i;
            }
        } else {
            int v = 1LL * k * power(a[i], p - 2, p) % p;
            if (cnt.contains(v)) {
                ans += cnt[v];
            }
        }
        cnt[a[i]]++;
    }
    std::cout << ans << "\n";
        return 0;
}