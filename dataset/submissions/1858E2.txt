#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int N = 1 << 20;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int q;
    std::cin >> q;
        std::vector<int> pos(N, q);
    int n = 0;
        std::vector<std::array<int, 5>> a;
    std::vector<int> b(q), c(q + 1);
    c[q] = n;
    std::vector<int> s(q + 1);
        for (int i = 0; i < q; i++) {
        char o;
        std::cin >> o;
        if (o == '+') {
            int x;
            std::cin >> x;
            a.push_back({x, pos[x], b[n], pos[b[n]], s[n + 1]});
            if (pos[b[n]] == n) {
                c[pos[b[n]]] -= 1;
                pos[b[n]] = q;
                c[pos[b[n]]] += 1;
            }
            if (pos[x] > n) {
                c[pos[x]] -= 1;
                pos[x] = n;
                c[pos[x]] += 1;
            }
            s[n + 1] = s[n] + c[n];
            b[n] = x;
            n += 1;
        } else if (o == '-') {
            int k;
            std::cin >> k;
            n -= k;
            a.push_back({-1, k});
        } else if (o == '?') {
            int ans = s[n];
            std::cout << ans << std::endl;
        } else {
            auto [x, y, z, w, t] = a.back();
            a.pop_back();
                        if (x == -1) {
                n += y;
            } else {
                n -= 1;
                b[n] = z;
                s[n + 1] = t;
                if (pos[x] != y) {
                    c[pos[x]] -= 1;
                    pos[x] = y;
                    c[pos[x]] += 1;
                }
                if (pos[z] != w) {
                    c[pos[z]] -= 1;
                    pos[z] = w;
                    c[pos[z]] += 1;
                }
            }
        }
    }
        return 0;
}