#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, m;
    std::cin >> n >> m;
        int x = 0;
    for (int i = 0; i < n; i++) {
        int l;
        std::cin >> l;
                std::vector<int> cnt(l + 2);
        for (int j = 0; j < l; j++) {
            int a;
            std::cin >> a;
                        if (a <= l + 1) {
                cnt[a]++;
            }
        }
        int a = 0;
        while (cnt[a] > 0) {
            a++;
        }
        a++;
        while (cnt[a] > 0) {
            a++;
        }
        x = std::max(x, a);
    }
        i64 ans;
    if (x <= m) {
        ans = 1LL * x * x + 1LL * (x + m) * (m - x + 1) / 2;
    } else {
        ans = 1LL * x * (m + 1);
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}