#include <bits/stdc++.h>
 using i64 = long long;
 constexpr i64 inf = 1E18;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, q;
    std::cin >> n >> q;
        std::vector<i64> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::sort(a.begin(), a.end());
        std::vector<i64> f(n + 1, inf);
    for (int i = 0; i < n; i++) {
        f[i + 1] = std::min(f[i] + 1, a[i] + 1);
    }
        i64 sum = std::accumulate(a.begin(), a.end(), 0LL);
    while (q--) {
        i64 k;
        std::cin >> k;
                if (k < n) {
            std::cout << std::min(f[k], a[k]) << " ";
        } else {
            i64 ans;
            i64 s = sum;
            if ((k - n) % 2 == 0) {
                ans = f[n] + k - n;
                s += 1LL * n * (k + k - n + 1) / 2 - (k - n) / 2;
            } else {
                ans = std::min(a[n - 1], f[n - 1] + k - (n - 1));
                s += 1LL * (n - 1) * (k + k - n + 2) / 2 - (k - n + 1) / 2;
            }
            ans = std::min(1LL * ans, s >= 0 ? s / n : (s - n + 1) / n);
            std::cout << ans << " ";
        }
    }
    std::cout << "\n";
        return 0;
}