#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    i64 n;
    std::cin >> n;
        int t = 0;
    if (__builtin_parityll(n) == 0) {
        std::cout << "first" << std::endl;
    } else {
        std::cout << "second" << std::endl;
        t = 1;
    }
    while (true) {
        if (t == 0) {
            int h = std::__lg(n);
            i64 p1 = 1LL << h;
            i64 p2 = n ^ p1;
            std::cout << p1 << " " << p2 << std::endl;
        } else {
            i64 p1, p2;
            std::cin >> p1 >> p2;
            if (p1 == 0 && p2 == 0) {
                break;
            }
            if (__builtin_parityll(p1) == 0) {
                n = p1;
            } else {
                n = p2;
            }
        }
        t ^= 1;
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}