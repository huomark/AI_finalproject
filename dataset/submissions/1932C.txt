#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i] %= m;
    }
        std::string s;
    std::cin >> s;
        int x = std::count(s.begin(), s.end(), 'L');
    for (int i = x - 2; i >= 0; i--) {
        a[i] = a[i] * a[i + 1] % m;
    }
    for (int i = x + 1; i < n; i++) {
        a[i] = a[i] * a[i - 1] % m;
    }
        int l = 0, r = n;
    for (int i = 0; i < n; i++) {
        int ans = 1 % m;
        if (l < x) {
            ans = ans * a[l] % m;
        }
        if (r > x) {
            ans = ans * a[r - 1] % m;
        }
        std::cout << ans << " \n"[i == n - 1];
        if (s[i] == 'L') {
            l++;
        } else {
            r--;
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}