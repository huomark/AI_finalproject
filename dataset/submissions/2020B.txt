#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 i64 isqrt(i64 n) {
    i64 x = std::sqrt(n);
    if (x * x > n) {
        x--;
    }
    return x;
}
 void solve() {
    i64 k;
    std::cin >> k;
        i64 n = k + isqrt(k);
    while (n - isqrt(n) < k) {
        n++;
    }
        std::cout << n << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}