#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector a(n, std::vector<int>(m));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            std::cin >> a[i][j];
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            int max = 0;
            if (i > 0) {
                max = std::max(max, a[i - 1][j]);
            }
            if (i + 1 < n) {
                max = std::max(max, a[i + 1][j]);
            }
            if (j > 0) {
                max = std::max(max, a[i][j - 1]);
            }
            if (j + 1 < m) {
                max = std::max(max, a[i][j + 1]);
            }
            a[i][j] = std::min(a[i][j], max);
            std::cout << a[i][j] << " \n"[j == m - 1];
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}