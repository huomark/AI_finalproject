#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, m;
    std::cin >> n >> m;
        std::vector<int> dp {0};
    std::vector<int> f {0};
    int s = 0;
        for (int i = 0; i < n; i++) {
        int r;
        std::cin >> r;
                if (r > 0) {
            if (r < f.size()) {
                f[r]++;
            }
        } else if (r < 0) {
            r = -r;
            r = s - r;
            if (r >= 0) {
                f[0]++;
                f[r + 1]--;
            }
        } else {
            for (int j = 1; j <= s; j++) {
                f[j] += f[j - 1];
            }
            for (int j = 0; j <= s; j++) {
                dp[j] += f[j];
            }
            dp.push_back(0);
            s++;
            for (int j = s; j >= 1; j--) {
                dp[j] = std::max(dp[j], dp[j - 1]);
            }
            f.assign(s + 1, 0);
        }
    }
    for (int j = 1; j <= s; j++) {
        f[j] += f[j - 1];
    }
    for (int j = 0; j <= s; j++) {
        dp[j] += f[j];
    }
        int ans = *std::max_element(dp.begin(), dp.end());
    std::cout << ans << "\n";
        return 0;
}