#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector a(n, std::vector<double>(n));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            std::cin >> a[i][j];
        }
    }
        std::vector<double> dp(1 << n);
    dp[(1 << n) - 1] = 1;
    std::cout << std::fixed << std::setprecision(10);
        for (int s = (1 << n) - 1; s > 0; s--) {
        int c = __builtin_popcount(s);
        for (int i = 0; i < n; i++) {
            if (s >> i & 1) {
                for (int j = i + 1; j < n; j++) {
                    if (s >> j & 1) {
                        dp[s ^ (1 << j)] += dp[s] * a[i][j] / (c * (c - 1) / 2);
                        dp[s ^ (1 << i)] += dp[s] * (1 - a[i][j]) / (c * (c - 1) / 2);
                    }
                }
            }
        }
    }
        for (int i = 0; i < n; i++) {
        std::cout << dp[1 << i] << " \n"[i == n - 1];
    }
        return 0;
}