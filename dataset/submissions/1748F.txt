#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<int> ans;
        auto add = [&](int x) {
        if (ans.empty() || ans.back() != x) {
            ans.push_back(x);
        } else {
            ans.pop_back();
        }
    };
        auto work = [&](int i, int j) {
        for (int k = i; k != j; k = (k + 1) % n) {
            add(k);
        }
        for (int k = (j - 1 + n) % n; k != i; k = (k - 1 + n) % n) {
            add((k - 1 + n) % n);
        }
        i = (i + 1) % n;
        if (i == j) {
            return;
        }
        for (int k = i; k != j; k = (k + 1) % n) {
            add(k);
        }
        for (int k = (j - 1 + n) % n; k != i; k = (k - 1 + n) % n) {
            add((k - 1 + n) % n);
        }
    };
        for (int i = 0; 2 * i < n - 1; i++) {
        int j = n - 1 - i;
        work(i, j);
    }
    for (int i = n / 2 - 1; i >= 0; i--) {
        int j = n - 1 - i;
        work(j, i);
    }
    for (int i = 0; 2 * i < n - 1; i++) {
        int j = n - 1 - i;
        work(i, j);
    }
        std::cout << ans.size() << "\n";
    for (int i = 0; i < int(ans.size()); i++) {
        std::cout << ans[i] << " \n"[i == int(ans.size())];
    }
        return 0;
}