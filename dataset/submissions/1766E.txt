#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        i64 ans = 0;
        std::vector<int> a(n), prv(n, -1);
    std::vector<std::array<int, 4>> p(n);
    int lst = -1;
    std::array<int, 4> l{-1, -1, -1, -1};
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        if (a[i] == 0) ans += 1LL * (i + 1) * (n - i);
        else {
            prv[i] = lst;
            lst = i;
        }
        p[i] = l;
        l[a[i]] = i;
    }
        for (int i = 0, j = 0, k = 0, l[2] {}; i < n; i++) {
        if (j < i) j = i;
        while (j < n && a[j] == 0) j++;
        ans += n - j;
                if (k < i) k = i;
        while (k < n && (prv[k] < i || (a[k] & a[prv[k]]))) k++;
        ans += n - k;
                for (int t = 0; t < 2; t++) {
            if (l[t] < k) l[t] = k;
            while (l[t] < n && (a[l[t]] != ((t + 1) ^ 3) || a[prv[l[t]]] != (t + 1) || p[prv[l[t]]][3] < std::max(k, p[prv[l[t]]][(t + 1) ^ 3]))) l[t]++;
        }
        if (k < n) ans += n - l[a[k] - 1];
    }
    std::cout << ans << "\n";
        return 0;
}