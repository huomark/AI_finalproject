#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::string s;
    std::cin >> s;
        int cnt[2] = {};
    int sum = 0;
    for (auto c : s) {
        sum += c - '0';
        if (c <= '1') {
            cnt[c - '0']++;
        }
    }
    sum -= s[0] - '0';
    if (s[0] <= '1') {
        cnt[s[0] - '0']--;
    }
    int ans = 1E9;
    for (int i = 0; i <= n - 2; i++) {
        sum -= s[i + 1] - '0';
        if (s[i + 1] <= '1') {
            cnt[s[i + 1] - '0']--;
        }
                int v = std::stoi(s.substr(i, 2));
        sum += v;
        if (v <= 1) {
            cnt[v]++;
        }
                int res;
        if (cnt[0] > 0) {
            res = 0;
        } else {
            res = std::max(1, sum - cnt[1]);
        }
        ans = std::min(ans, res);
                sum -= v;
        if (v <= 1) {
            cnt[v]--;
        }
                sum += s[i] - '0';
        if (s[i] <= '1') {
            cnt[s[i] - '0']++;
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}