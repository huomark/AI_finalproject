#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<std::vector<int>> adj(n);
    for (int i = 1; i < n; i++) {
        int u, v;
        std::cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
        std::vector<int> ans(n + 1);
    for (int r = 0; r < n; r++) {
        std::vector<int> dep(n), cnt(n);
        auto dfs = [&](auto self, int x, int p) -> void {
            cnt[dep[x]]++;
            for (auto y : adj[x]) {
                if (y == p) {
                    continue;
                }
                dep[y] = dep[x] + 1;
                self(self, y, x);
            }
        };
        dfs(dfs, r, -1);
                int k = 0;
        int sum = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < cnt[i]; j++) {
                k++;
                sum += i;
                ans[k] = std::max(ans[k], (n - 1) * k - 2 * sum);
            }
        }
    }
        for (int i = 0; i <= n; i++) {
        std::cout << ans[i] << " \n"[i == n];
    }
        return 0;
}