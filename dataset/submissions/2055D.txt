#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, k, l;
    std::cin >> n >> k >> l;
    k *= 2;
    l *= 2;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i] *= 2;
    }
        int ans = a[0];
    int x = k;
    for (int i = 1; i < n; i++) {
        if (a[i] > x) {
            a[i] = std::max(x, a[i] - ans);
            assert((a[i] - x) % 2 == 0);
            ans += (a[i] - x) / 2;
            x = (x + a[i]) / 2 + k;
        } else {
            a[i] = std::min(x, a[i] + ans);
            assert(x <= a[i] + k);
            x = a[i] + k;
        }
    }
        if (x < l) {
        ans += l - x;
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}