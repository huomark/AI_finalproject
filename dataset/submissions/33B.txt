#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int inf = 1E9;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        std::string s, t;
    std::cin >> s >> t;
        if (s.size() != t.size()) {
        std::cout << -1 << "\n";
        return 0;
    }
        int n = s.size();
        int m;
    std::cin >> m;
        std::vector dp(26, std::vector(26, inf));
    for (int i = 0; i < 26; i++) {
        dp[i][i] = 0;
    }
    for (int i = 0; i < m; i++) {
        char a, b;
        int c;
        std::cin >> a >> b >> c;
        int x = a - 'a', y = b - 'a';
        dp[x][y] = std::min(dp[x][y], c);
    }
        for (int k = 0; k < 26; k++) {
        for (int i = 0; i < 26; i++) {
            for (int j = 0; j < 26; j++) {
                dp[i][j] = std::min(dp[i][j], dp[i][k] + dp[k][j]);
            }
        }
    }
        int ans = 0;
    std::string c;
    for (int i = 0; i < n; i++) {
        int res = inf;
        int x = s[i] - 'a', y = t[i] - 'a';
        int z = 0;
        for (int j = 0; j < 26; j++) {
            if (dp[x][j] + dp[y][j] < res) {
                res = dp[x][j] + dp[y][j];
                z = j;
            }
        }
        c += 'a' + z;
        ans = std::min(inf, ans + res);
    }
        if (ans == inf) {
        std::cout << -1 << "\n";
        return 0;
    }
        std::cout << ans << "\n";
    std::cout << c << "\n";
        return 0;
}