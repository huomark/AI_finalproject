#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int even = 0, odd = 0;
    for (int i = 0; i < 30; i++) {
        if (i % 2 == 0) {
            even |= 1 << i;
        } else {
            odd |= 1 << i;
        }
    }
        int a[2];
    std::cout << even << std::endl;
    std::cin >> a[0];
    std::cout << odd << std::endl;
    std::cin >> a[1];
        a[0] -= even * 2;
    a[1] -= odd * 2;
    std::swap(a[0], a[1]);
        int cnt[30] {};
    for (int i = 0; i < 30; i++) {
        if (a[i % 2] >> i & 1) {
            cnt[i] = 1;
        } else if (a[i % 2] >> (i + 1) & 1) {
            cnt[i] = 2;
        }
    }
        std::cout << "!" << std::endl;
        int m;
    std::cin >> m;
        int ans = 0;
    for (int i = 0; i < 30; i++) {
        if (m >> i & 1) {
            ans += 2 << i;
        } else {
            ans += cnt[i] << i;
        }
    }
    std::cout << ans << std::endl;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}