#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, h;
    std::cin >> n >> h;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    std::sort(a.begin(), a.end());
        std::array<std::array<i64, 2>, 3> dp {};
    dp[2][1] = h;
        int ans = 0;
        for (int i = 0; i < n; i++) {
        for (int x = 2; x >= 0; x--) {
            for (int y = 1; y >= 0; y--) {
                if (x) {
                    dp[x - 1][y] = std::max(dp[x - 1][y], 2 * dp[x][y]);
                }
                if (y) {
                    dp[x][y - 1] = std::max(dp[x][y - 1], 3 * dp[x][y]);
                }
                if (dp[x][y] > a[i]) {
                    dp[x][y] += a[i] / 2;
                    ans = i + 1;
                }
            }
        }
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}