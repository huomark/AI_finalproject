#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int x;
    std::cin >> x;
        int ans[200] {};
        ans[0] = (1 << 16) - 16;
    ans[1] = 2 * 16 + 2;
    ans[2] = 8 + ((~x & 1) << 2);
        for (int i = 1; i < 17; i++) {
        int d = (x >> (i - 1) & 1);
                if (i < 16) {
            int e = (x >> i & 1);
            ans[8 * i + 4 * d + 0] = (1 << 16) - 16 + i;
            ans[8 * i + 4 * d + 1] = (8 * i + 4 * d + 2) * 16 + 2;
            ans[8 * i + 4 * d + 2] = 8 * (i + 1) + 4 * !e;
        } else {
            ans[8 * i + 4 * d + 0] = 15;
            ans[8 * i + 4 * d + 1] = (1 << 16) - 16;
            ans[8 * i + 4 * d + 2] = (1 << 16) - 1;
        }
                ans[8 * i + 4 * !d + 0] = 0;
        ans[8 * i + 4 * !d + 1] = (1 << 16) - 16;
        ans[8 * i + 4 * !d + 2] = (1 << 16) - 1;
    }
        for (int i = 0; i < 200; i++) {
        std::cout << std::hex << std::setw(4) << std::setfill('0') << ans[i] << "\n";
    }
        return 0;
}