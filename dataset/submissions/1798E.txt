#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> step(n + 1), suf(n + 1), f(n + 1);
    std::vector<int> ans(n - 1);
    for (int i = n - 1; i >= 1; i--) {
        step[i] = (i + a[i] + 1 > n || step[i + a[i] + 1] == -1) ? -1 : step[i + a[i] + 1] + 1;
        suf[i] = std::max(suf[i + 1], step[i + 1]);
        f[i] = std::max(i + a[i] + 1 > n ? -1 : f[i + a[i] + 1] + 1, suf[i] + 1);
        if (step[i] == a[i - 1]) {
            ans[i - 1] = 0;
        } else if (step[i] != -1 || f[i] >= a[i - 1]) {
            ans[i - 1] = 1;
        } else {
            ans[i - 1] = 2;
        }
    }
        for (int i = 0; i < n - 1; i++) {
        std::cout << ans[i] << " \n"[i == n - 2];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}