#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n;
    std::cin >> n;
        std::string s;
    std::cin >> s;
        if (std::count(s.begin(), s.end(), s[0]) == n) {
        std::cout << -1 << "\n";
        return;
    }
        std::vector<int> a(n);
    int cnt[3] {};
    for (int i = 0; i < n; i++) {
        a[i] = s[i] == 'L' ? 0 : s[i] == 'I' ? 1 : 2;
        cnt[a[i]]++;
    }
        std::vector<int> ans;
    int min = *std::min_element(cnt, cnt + 3);
    for (int x = 0; x < 3; x++) {
        if (cnt[x] == min) {
            continue;
        }
        int p = 1;
        while ((a[p] == x) == (a[p - 1] == x)) {
            p++;
        }
        while (cnt[x] > min) {
            if (a[p] == x) {
                int y = a[p - 1];
                a.insert(a.begin() + p, 3 - x - y);
                ans.push_back(p);
                a.insert(a.begin() + p + 1, y);
                ans.push_back(p + 1);
                p += 2;
            } else {
                int y = a[p];
                a.insert(a.begin() + p, 3 - x - y);
                ans.push_back(p);
                a.insert(a.begin() + p, y);
                ans.push_back(p);
            }
            cnt[x]--;
        }
    }
        std::cout << ans.size() << "\n";
    for (auto x : ans) {
        std::cout << x << "\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}