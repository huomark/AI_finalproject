#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int inf = 1E9;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, m;
    std::cin >> n >> m;
        std::vector<std::string> s(n);
    for (int i = 0; i < n; i++) {
        std::cin >> s[i];
    }
        std::vector dp(n + 1, std::vector(26, std::vector(26, inf)));
    std::vector pre(n + 1, std::vector(26, std::vector(26, std::pair{-1, -1})));
    dp[0].assign(26, std::vector(26, 0));
    for (int i = 0; i < n; i++) {
        for (int x = 0; x < 26; x++) {
            for (int y = 0; y < 26; y++) {
                if (x == y) {
                    continue;
                }
                int cost = 0;
                for (int j = 0; j < m; j++) {
                    cost += s[i][j] - 'a' != (j % 2 ? y : x);
                }
                for (int a = 0; a < 26; a++) {
                    for (int b = 0; b < 26; b++) {
                        if (a != x && b != y && dp[i][a][b] + cost < dp[i + 1][x][y]) {
                            dp[i + 1][x][y] = dp[i][a][b] + cost;
                            pre[i + 1][x][y] = {a, b};
                        }
                    }
                }
            }
        }
    }
        int ans = inf;
    int x = -1, y = -1;
    for (int a = 0; a < 26; a++) {
        for (int b = 0; b < 26; b++) {
            if (dp[n][a][b] < ans) {
                ans = dp[n][a][b];
                x = a;
                y = b;
            }
        }
    }
    std::cout << ans << "\n";
    for (int i = n - 1; i >= 0; i--) {
        for (int j = 0; j < m; j++) {
            s[i][j] = 'a' + (j % 2 ? y : x);
        }
        std::tie(x, y) = pre[i + 1][x][y];
    }
    for (int i = 0; i < n; i++) {
        std::cout << s[i] << "\n";
    }
        return 0;
}