#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        auto pre = a, suf = a;
    for (int i = 1; i < n; i++) {
        pre[i] = std::max(pre[i], pre[i - 1]);
    }
    for (int i = n - 2; i >= 0; i--) {
        suf[i] = std::min(suf[i], suf[i + 1]);
    }
    std::vector<int> ans(n);
    for (int i = 1, j = 0; i <= n; i++) {
        if (i == n || pre[i - 1] <= suf[i]) {
            for (int k = j; k < i; k++) {
                ans[k] = pre[i - 1];
            }
            j = i;
        }
    }
    for (int i = 0; i < n; i++) {
        std::cout << ans[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}