#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int N = 2E5 + 1;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    std::vector<i64> s(n + 1);
    for (int i = 0; i < n; i++) {
        s[i + 1] = s[i] + a[i];
    }
        i64 ans = 0;
    std::bitset<N> f{};
    f[1] = 1;
    for (int i = 0; i < n; i++) {
        f |= f << a[i];
        if (f[i + 1]) {
            f[i + 1] = 0;
            ans = std::max(ans, s[i + 1] - i);
        }
    }
    for (int i = n; i <= 2 * n; i++) {
        if (f[i]) {
            ans = std::max(ans, s[n] - (i - 1));
        }
    }
    std::cout << ans << "\n";
        return 0;
}