#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, m;
    std::cin >> n >> m;
        std::vector<std::vector<std::pair<int, int>>> adj(n);
    for (int i = 0; i < m; i++) {
        int u, v, w;
        std::cin >> u >> v >> w;
        u--, v--;
        adj[u].emplace_back(v, w);
        adj[v].emplace_back(u, w);
    }
        std::priority_queue<std::pair<i64, int>, std::vector<std::pair<i64, int>>, std::greater<>> q;
    q.emplace(0, 0);
        std::vector<i64> dis(n, -1);
    std::vector<int> a;
    while (!q.empty()) {
        auto [d, x] = q.top();
        q.pop();
                if (dis[x] != -1) {
            continue;
        }
        dis[x] = d;
        a.push_back(x);
        if (x == n - 1) {
            break;
        }
        for (auto [y, w] : adj[x]) {
            q.emplace(d + w, y);
        }
    }
        if (dis[n - 1] == -1) {
        std::cout << "inf\n";
        return 0;
    }
    std::cout << dis[n - 1] << " " << a.size() - 1 << "\n";
    for (int i = 1; i < a.size(); i++) {
        std::string s(n, '0');
        for (int j = 0; j < i; j++) {
            s[a[j]] = '1';
        }
        std::cout << s << " " << dis[a[i]] - dis[a[i - 1]] << "\n";
    }
        return 0;
}