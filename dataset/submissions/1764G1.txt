#include <bits/stdc++.h>
 using i64 = long long;
 int Q(int l, int r, int k) {
    std::cout << "? " << l + 1 << " " << r << " " << k << std::endl;
    int res;
    std::cin >> res;
    return res;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        int pn = -1;
    if (n % 2 == 0) {
        int l = 0, r = n;
        while (r - l > 2) {
            int m = (l + r) / 2;
            assert(r - m >= 2);
            if (Q(m, r, n) == 2) {
                l = m;
            } else {
                r = m;
            }
        }
        pn = l;
        if (r - l == 2) {
            if (l > 0) {
                if (Q(l - 1, l + 1, n) == 1) {
                    pn = l + 1;
                }
            } else {
                if (Q(l + 1, r + 1, n) == 2) {
                    pn = l + 1;
                }
            }
        }
    }
        int s = (n + 1) / 2;
        int l = 0, r = n;
    while (r - l > 1) {
        int m = (l + r) / 2;
                int ql = Q(0, m, 2);
        int qr = Q(m, n, 2);
                int lenl = m;
        int lenr = n - m;
        if (0 <= pn && pn < m) {
            ql--;
            lenl--;
        }
        if (m <= pn && pn < n) {
            qr--;
            lenr--;
        }
        int both = ql + qr - s;
        assert((lenl - both) % 2 != (lenr - both) % 2);
        if ((lenl - both) % 2 != 0) {
            r = m;
        } else {
            l = m;
        }
    }
        std::cout << "! " << l + 1 << std::endl;
        return 0;
}