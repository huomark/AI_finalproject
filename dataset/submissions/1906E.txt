#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int N;
    std::cin >> N;
        std::vector<int> C(2 * N);
    std::vector<int> dp(N + 1, 2 * N + 1);
    dp[0] = 0;
    std::vector<int> len;
    int lst = 0;
    for (int i = 0; i < 2 * N; i++) {
        std::cin >> C[i];
    }
    for (int i = 1; i <= 2 * N; i++) {
        if (i == 2 * N || C[i] > C[lst]) {
            len.push_back(i - lst);
            lst = i;
        }
    }
    for (int i = 0; i < len.size(); i++) {
        for (int j = N - len[i]; j >= 0; j--) {
            if (dp[j] <= i && dp[j + len[i]] > i + 1) {
                dp[j + len[i]] = i + 1;
            }
        }
    }
    if (dp[N] > len.size()) {
        std::cout << -1 << "\n";
        return 0;
    }
        std::vector<int> f(len.size());
    int j = N;
    for (int i = len.size() - 1; i >= 0; i--) {
        if (dp[j] <= i) {
            f[i] = 1;
        } else {
            f[i] = 0;
            j -= len[i];
        }
    }
    std::vector<int> A, B;
    lst = 0;
    for (int i = 0; i < len.size(); i++) {
        for (int j = 0; j < len[i]; j++) {
            int x = C[lst++];
            if (f[i] == 0) {
                A.push_back(x);
            } else {
                B.push_back(x);
            }
        }
    }
    for (int i = 0; i < N; i++) {
        std::cout << A[i] << " \n"[i == N - 1];
    }
    for (int i = 0; i < N; i++) {
        std::cout << B[i] << " \n"[i == N - 1];
    }
        return 0;
}