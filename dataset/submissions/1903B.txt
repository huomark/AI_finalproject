#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector M(n, std::vector<int>(n));
    std::vector<int> a(n, (1 << 30) - 1);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            std::cin >> M[i][j];
            if (i != j) {
                a[i] &= M[i][j];
                a[j] &= M[i][j];
            }
        }
    }
        for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (i != j && M[i][j] != (a[i] | a[j])) {
                std::cout << "NO\n";
                return;
            }
        }
    }
    std::cout << "YES\n";
    for (int i = 0; i < n; i++) {
        std::cout << a[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}