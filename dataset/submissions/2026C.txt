#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::string s;
    std::cin >> s;
        i64 ans = 1LL * n * (n + 1) / 2;
    int need = 0;
    for (int i = n - 1; i >= 0; i--) {
        if (s[i] == '1' && need + 1 <= i) {
            ans -= i + 1;
            need++;
        } else {
            need = std::max(0, need - 1);
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}