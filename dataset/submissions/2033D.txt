#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> dp(n + 1);
    std::map<i64, int> f;
    f[0] = 0;
    i64 s = 0;
    for (int i = 1; i <= n; i++) {
        int a;
        std::cin >> a;
        s += a;
        dp[i] = dp[i - 1];
        if (f.contains(s)) {
            dp[i] = std::max(dp[i], 1 + dp[f[s]]);
        }
        f[s] = i;
    }
    std::cout << dp[n] << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}