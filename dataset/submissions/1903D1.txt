#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, q;
    std::cin >> n >> q;
        std::vector<i64> f(1 << 20);
    std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    for (int k = 0; k < 20; k++) {
        std::vector<i64> s(1 << (19 - k)), c(1 << (19 - k));
        for (int i = 0; i < n; i++) {
            if (~a[i] >> k & 1) {
                s[a[i] >> (k + 1)] += a[i] & ((1 << k) - 1);
                c[a[i] >> (k + 1)] += 1;
            }
        }
        for (int i = 1; i < (1 << (19 - k)); i *= 2) {
            for (int j = 0; j < (1 << (19 - k)); j += 2 * i) {
                for (int l = 0; l < i; l++) {
                    s[j + l] += s[i + j + l];
                    c[j + l] += c[i + j + l];
                }
            }
        }
        for (int x = 0; x < (1 << 20); x++) {
            if (x >> k & 1) {
                int y = x >> (k + 1);
                f[x] += c[y] * (x & ((1 << (k + 1)) - 1)) - s[y];
            }
        }
    }
    for (int i = (1 << 20) - 2; i >= 0; i--) {
        f[i] = std::min(f[i], f[i + 1]);
    }
        while (q--) {
        i64 k;
        std::cin >> k;
                i64 ans = std::upper_bound(f.begin(), f.end(), k) - f.begin() - 1;
        if (k >= f.back()) {
            ans += (k - f.back()) / n;
        }
                std::cout << ans << "\n";
    }
        return 0;
}