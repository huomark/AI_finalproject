#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> b(2 * n);
    for (int i = 0; i < 2 * n; i++) {
        std::cin >> b[i];
    }
        std::sort(b.begin(), b.end());
        std::vector<i64> a(2 * n + 1);
    i64 res = 0;
    for (int i = 0; i < n - 1; i++) {
        a[2 * i + 1] = b[i];
        res -= b[i];
    }
    for (int i = 0; i < n + 1; i++) {
        a[2 * i] = b[n - 1 + i];
        res += b[n - 1 + i];
    }
    a[2 * n - 1] = res;
        for (int i = 0; i <= 2 * n; i++) {
        std::cout << a[i] << " \n"[i == 2 * n];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}