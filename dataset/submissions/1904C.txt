#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<i64> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::sort(a.begin(), a.end());
    i64 ans = a[0];
    for (int i = 1; i < n; i++) {
        ans = std::min(ans, a[i] - a[i - 1]);
    }
        if (k == 2) {
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                i64 v = a[j] - a[i];
                int k = std::lower_bound(a.begin(), a.end(), v) - a.begin();
                if (k > 0) {
                    ans = std::min(ans, v - a[k - 1]);
                }
                if (k < n) {
                    ans = std::min(ans, a[k] - v);
                }
            }
        }
    } else if (k > 2) {
        ans = 0;
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}