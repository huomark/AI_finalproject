#include <bits/stdc++.h>
 using i64 = long long;
 int f[1 << 26];
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<std::string> s(n);
    for (int i = 0; i < n; i++) {
        std::cin >> s[i];
    }
        i64 ans = 0;
    std::vector<std::array<int, 26>> cnt(n);
    std::vector<int> mask(n);
    for (int i = 0; i < n; i++) {
        for (auto c : s[i]) {
            cnt[i][c - 'a'] += 1;
        }
        for (int j = 0; j < 26; j++) {
            mask[i] |= (cnt[i][j] % 2) << j;
        }
    }
    for (int c = 0; c < 26; c++) {
        for (int i = 0; i < n; i++) {
            if (cnt[i][c] == 0) {
                ans += f[(1 << 26) - 1 - (1 << c) - mask[i]];
                f[mask[i]] += 1;
            }
        }
        for (int i = 0; i < n; i++) {
            if (cnt[i][c] == 0) {
                f[mask[i]] -= 1;
            }
        }
    }
        std::cout << ans << "\n";
        return 0;
}