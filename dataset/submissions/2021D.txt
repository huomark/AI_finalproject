#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 constexpr i64 inf = 1E18;
 void chmin(i64 &a, i64 b) {
    if (a > b) {
        a = b;
    }
}
 void chmax(i64 &a, i64 b) {
    if (a < b) {
        a = b;
    }
}
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector A(n, std::vector<int>(m));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            std::cin >> A[i][j];
        }
    }
        std::vector<i64> dpl(m), dpr(m);
    for (int i = 0; i < n; i++) {
        std::vector<i64> pre(m + 1);
        for (int j = 0; j < m; j++) {
            pre[j + 1] = pre[j] + A[i][j];
        }
        std::vector<i64> pmn(m), smx(m);
        i64 mn = inf;
        for (int j = 0; j < m; j++) {
            chmin(mn, pre[j]);
            pmn[j] = mn;
        }
        i64 mx = -inf;
        for (int j = m - 1; j >= 0; j--) {
            chmax(mx, pre[j + 1]);
            smx[j] = mx;
        }
                if (i == 0) {
            for (int j = 0; j < m; j++) {
                dpl[j] = smx[j] - pre[j];
                dpr[j] = pre[j + 1] - pmn[j];
            }
        } else {
            i64 mx = -inf;
            std::vector<i64> ndpl(m), ndpr(m);
            for (int j = m - 1; j >= 0; j--) {
                if (j + 1 < m) {
                    chmax(mx, dpr[j] + smx[j + 1]);
                }
                ndpl[j] = mx - pre[j];
                chmax(mx, dpl[j] + smx[j]);
            }
            mx = -inf;
            for (int j = 0; j < m; j++) {
                if (j > 0) {
                    chmax(mx, dpl[j] - pmn[j - 1]);
                }
                ndpr[j] = mx + pre[j + 1];
                chmax(mx, dpr[j] - pmn[j]);
            }
            dpl = std::move(ndpl);
            dpr = std::move(ndpr);
        }
    }
        i64 ans = -inf;
    for (int j = 0; j < m; j++) {
        chmax(ans, dpl[j]);
        chmax(ans, dpr[j]);
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}