#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, p;
    std::cin >> n >> p;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    std::reverse(a.begin(), a.end());
        std::set<int> s;
    for (int i = 0; i < n; i++) {
        s.insert(a[i]);
    }
    a.push_back(0);
        int x = 0;
    while (x < a[0] && s.count(x)) {
        x++;
    }
        int ans = 0;
    if (x == a[0]) {
        x = p - 1;
        while (x > a[0] && s.count(x)) {
            x--;
        }
        ans = x - a[0];
    } else {
        x = a[0];
        ans = p - a[0];
        a[0] = 0;
        a[1]++;
        for (int i = 1; i < n; i++) {
            if (a[i] >= p) {
                a[i] -= p;
                a[i + 1]++;
            }
        }
        for (int i = 0; i <= n; i++) {
            s.insert(a[i]);
        }
        while (x > 0 && s.count(x)) {
            x--;
        }
        ans += x;
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}