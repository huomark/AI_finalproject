#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int inf = 1E9;
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector<std::array<int, 2>> a(m);
    for (int i = 0; i < m; i++) {
        int l, r;
        std::cin >> l >> r;
        a[i] = {l - 1, r - 1};
    }
    std::sort(a.begin(), a.end());
        std::vector<int> dp(n + 1, -inf);
    dp[0] = 0;
    for (int l = 0, r = 0, j = 0; l < n; l = r + 1) {
        r = l;
        int i = j;
        while (j < m && a[j][0] <= r) {
            r = std::max(r, a[j][1]);
            j++;
        }
        int L = l - 1, R = r;
        for (int k = i; k < j; k++) {
            L = std::max(L, a[k][0]);
            R = std::min(R, a[k][1] - 1);
        }
        if (L > R) {
            std::cout << -1 << "\n";
            return;
        }
        for (int i = l; i >= 0; i--) {
            int v = dp[i];
            dp[i] = -inf;
            for (int j = L; j <= R; j++) {
                dp[i + r - j] = std::max(dp[i + r - j], v + (j - l + 1) * i);
            }
        }
    }
        int ans = 0;
    for (int i = 0; i <= n; i++) {
        ans = std::max(ans, dp[i] + i * (i - 1) / 2 + (n - i) * (n - i - 1) / 2);
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}