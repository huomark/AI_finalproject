#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    i64 k;
    std::cin >> n >> k;
        if (k % 2 != 0) {
        std::cout << "No\n";
        return;
    }
    k /= 2;
    std::vector<int> p(n, -1);
    std::vector<int> vis(n);
    for (int i = 0; i < n - 1 - i && k > 0; i++) {
        int t = std::min<i64>(n - 1 - i, i + k);
        vis[t] = 1;
        p[i] = t;
        k -= t - i;
    }
    if (k > 0) {
        std::cout << "No\n";
        return;
    }
    std::cout << "Yes\n";
    for (int i = 0, j = 0; i < n; i++) {
        if (p[i] == -1) {
            while (vis[j]) {
                j++;
            }
            p[i] = j++;
        }
        std::cout << p[i] + 1 << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}