#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<std::pair<int, int>> mons(n);
    for (int i = 0; i < n; i++) {
        std::cin >> mons[i].first;
    }
    for (int i = 0; i < n; i++) {
        std::cin >> mons[i].second;
    }
        std::sort(mons.begin(), mons.end());
        int cur = 0;
    std::vector<int> suf(n + 1);
    suf[n] = 1E9;
    for (int i = n - 1; i >= 0; i--) {
        suf[i] = std::min(mons[i].second, suf[i + 1]);
    }
        int atk = 0;
    while (cur < n) {
        if (k <= 0) {
            std::cout << "NO\n";
            return;
        }
        atk += k;
        while (cur < n && mons[cur].first <= atk) {
            cur++;
        }
        k -= suf[cur];
    }
        std::cout << "YES\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}