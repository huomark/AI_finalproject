#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        if (n == 1) {
        std::cout << 1 << "\n";
        return;
    }
        int g = 0;
    for (int i = 1; i < n; i++) {
        g = std::gcd(g, a[i] - a[i - 1]);
    }
        int max = *std::max_element(a.begin(), a.end());
    std::set<int> s;
    std::vector<int> cnt(n + 1);
    i64 ans = 0;
    int mex = 0;
    for (int i = 0; i < n; i++) {
        a[i] = (max - a[i]) / g;
        if (a[i] <= n) {
            cnt[a[i]] += 1;
        }
        ans += a[i];
    }
    while (cnt[mex]) {
        mex++;
    }
    ans += mex;
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}