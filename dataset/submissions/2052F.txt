#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::string s[2];
    std::cin >> s[0] >> s[1];
        bool unique = true;
    for (int i = 0; i < n; i++) {
        if (s[0][i] == '#' && s[1][i] == '#') {
            continue;
        }
        if (s[0][i] == '.' && s[1][i] == '.') {
            if (i < n - 1 && s[0][i + 1] == '.' && s[1][i + 1] == '.') {
                unique = false;
            }
            continue;
        }
        if (s[0][i] == '.') {
            if (i < n - 1 && s[0][i + 1] == '.') {
                s[0][i + 1] = '#';
            } else {
                std::cout << "None\n";
                return;
            }
        } else {
            if (i < n - 1 && s[1][i + 1] == '.') {
                s[1][i + 1] = '#';
            } else {
                std::cout << "None\n";
                return;
            }
        }
    }
        if (unique) {
        std::cout << "Unique\n";
    } else {
        std::cout << "Multiple\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}