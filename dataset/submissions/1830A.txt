#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<std::vector<std::pair<int, int>>> adj(n);
    std::vector<int> f(n), e(n);
    e[0] = n;
    for (int i = 0; i < n - 1; i++) {
        int u, v;
        std::cin >> u >> v;
        u--, v--;
        adj[u].emplace_back(v, i);
        adj[v].emplace_back(u, i);
    }
        std::function<void(int, int)> dfs = [&](int x, int p) {
        for (auto [y, i] : adj[x]) {
            if (y == p) {
                continue;
            }
            e[y] = i;
            f[y] = f[x] + (i < e[x]);
            dfs(y, x);
        }
    };
    dfs(0, -1);
        auto ans = *std::max_element(f.begin(), f.end());
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}