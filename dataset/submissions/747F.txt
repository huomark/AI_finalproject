#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        i64 k;
    int t;
    std::cin >> k >> t;
    k--;
        i64 binom[20][20] = {};
    for (int i = 0; i < 20; i++) {
        binom[i][0] = 1;
        for (int j = 1; j <= i; j++) {
            binom[i][j] = std::min(binom[i - 1][j] + binom[i - 1][j - 1], k + 1);
        }
    }
        auto get = [&](std::array<int, 16> f, int n) {
        std::vector<i64> dp(n + 1);
        dp[0] = 1;
        for (int i = 0; i < 16; i++) {
            for (int x = n; x >= 0; x--) {
                i64 v = dp[x];
                dp[x] = 0;
                for (int y = 0; y + f[i] <= t && x + y <= n; y++) {
                    dp[x + y] = std::min(k + 1, dp[x + y] + v * binom[x + y][x]);
                }
            }
        }
        return dp[n];
    };
        for (int len = 1; ; len++) {
        for (int i = 1; i < 16; i++) {
            std::array<int, 16> f{};
            f[i] = 1;
            i64 res = get(f, len - 1);
            if (res <= k) {
                k -= res;
                continue;
            }
            std::vector<int> a{i};
            for (int j = 1; j < len; j++) {
                for (int x = 0; x < 16; x++) {
                    f[x]++;
                    res = get(f, len - j - 1);
                    if (k >= res) {
                        k -= res;
                        f[x]--;
                        continue;
                    }
                    a.push_back(x);
                    break;
                }
            }
            for (auto x : a) {
                if (x < 10) {
                    std::cout << x;
                } else {
                    std::cout << char('a' + x - 10);
                }
            }
            std::cout << "\n";
            return 0;
        }
    }
        return 0;
}