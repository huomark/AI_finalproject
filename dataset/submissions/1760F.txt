#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, d;
    i64 c;
    std::cin >> n >> c >> d;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::sort(a.begin(), a.end(), std::greater());
        if (1LL * a[0] * d < c) {
        std::cout << "Impossible\n";
        return;
    }
        int lo = 0, hi = d + 1;
    while (lo < hi) {
        int k = (lo + hi + 1) / 2;
                i64 res = 0;
        for (int i = 0; i < std::min(n, k + 1); i++) {
            res += 1LL * a[i] * (d / (k + 1) + (d % (k + 1) > i));
        }
        if (res >= c) {
            lo = k;
        } else {
            hi = k - 1;
        }
    }
        if (lo > d) {
        std::cout << "Infinity\n";
        return;
    }
        std::cout << lo << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}