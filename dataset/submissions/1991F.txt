#include <bits/stdc++.h>
 using u32 = unsigned;
using i64 = long long;
using u64 = unsigned long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, q;
    std::cin >> n >> q;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        while (q--) {
        int l, r;
        std::cin >> l >> r;
        l--;
                if (r - l > 100) {
            std::cout << "YES\n";
            continue;
        }
                std::vector b(a.begin() + l, a.begin() + r);
        std::sort(b.begin(), b.end());
                bool ok = false;
        int L = 1E9, R = -1;
        for (int i = 0; i + 2 < b.size(); i++) {
            if (b[i] + b[i + 1] > b[i + 2]) {
                L = std::min(L, i);
                R = i;
            }
        }
        if (R - L >= 3) {
            ok = true;
        }
        for (int i = 0; i + 5 < b.size() && !ok; i++) {
            if (b[i] + b[i + 1] > b[i + 3] && b[i + 2] + b[i + 4] > b[i + 5]) {
                ok = true;
                break;
            }
            if (b[i] + b[i + 2] > b[i + 3] && b[i + 1] + b[i + 4] > b[i + 5]) {
                ok = true;
                break;
            }
            if (b[i + 1] + b[i + 2] > b[i + 3] && b[i] + b[i + 4] > b[i + 5]) {
                ok = true;
                break;
            }
            if (b[i] + b[i + 1] > b[i + 4] && b[i + 2] + b[i + 3] > b[i + 5]) {
                ok = true;
                break;
            }
            if (b[i] + b[i + 2] > b[i + 4] && b[i + 1] + b[i + 3] > b[i + 5]) {
                ok = true;
                break;
            }
            if (b[i + 1] + b[i + 2] > b[i + 4] && b[i] + b[i + 3] > b[i + 5]) {
                ok = true;
                break;
            }
            if (b[i] + b[i + 3] > b[i + 4] && b[i + 1] + b[i + 2] > b[i + 5]) {
                ok = true;
                break;
            }
        }
        if (ok) {
            std::cout << "YES\n";
        } else {
            std::cout << "NO\n";
        }
    }
        return 0;
}