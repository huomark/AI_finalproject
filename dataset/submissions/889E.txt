#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<i64> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::map<i64, i64> f;
    f[a[0]] = 0;
        for (int i = 0; i < n; i++) {
        i64 res = -1;
        for (auto it = f.upper_bound(a[i]); it != f.end(); it = f.erase(it)) {
            res = std::max(res, it->second + (it->first / a[i] - 1) * a[i] * i);
            i64 t = it->first % a[i];
            if (t > 0) {
                f[t] = std::max(f[t], it->second + it->first / a[i] * a[i] * i);
            }
        }
        if (res >= 0) {
            f[a[i]] = std::max(f[a[i]], res);
        }
    }
        i64 ans = 0;
    for (auto [x, y] : f) {
        ans = std::max(ans, (x - 1) * n + y);
    }
    std::cout << ans << "\n";
        return 0;
}