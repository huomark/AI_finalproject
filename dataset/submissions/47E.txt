#include <bits/stdc++.h>
 using i64 = long long;
 constexpr double g = 9.8;
constexpr double Pi = std::numbers::pi;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, V;
    std::cin >> n >> V;
        std::vector<double> alpha(n);
    for (int i = 0; i < n; i++) {
        std::cin >> alpha[i];
    }
        auto get = [&](double a, double x) {
        double t = x / V / std::cos(a);
        double y = V * std::sin(a) * t - g * t * t / 2;
        return y;
    };
        std::vector<int> o(n);
    std::iota(o.begin(), o.end(), 0);
    std::sort(o.begin(), o.end(), [&](int i, int j) {
        return alpha[i] < alpha[j];
    });
        std::vector<double> pre(n, 1E9);
        int m;
    std::cin >> m;
    for (int i = 0; i < m; i++) {
        double x, y;
        std::cin >> x >> y;
                int p = std::partition_point(o.begin(), o.end(), [&](int i) {
            return get(alpha[i], x) <= y;
        }) - o.begin();
        if (p) {
            pre[p-1] = std::min(pre[p-1], x);
        }
    }
    for (int i = n-1; i; i--) {
        pre[i-1] = std::min(pre[i-1], pre[i]);
    }
        std::vector<double> ans(n);
    for (int i = 0; i < n; i++) {
        ans[o[i]] = pre[i];
    }
    std::cout << std::fixed << std::setprecision(10);
    for (int i = 0; i < n; i++) {
        ans[i] = std::min(ans[i], 2. * V * V * std::sin(alpha[i]) * std::cos(alpha[i]) / g);
        std::cout << ans[i] << " " << get(alpha[i], ans[i]) << "\n";
    }
        return 0;
}