#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        std::cout << std::fixed << std::setprecision(10);
        int n, k;
    std::cin >> n >> k;
    k -= 1;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> b;
    for (int l = 1, r; l <= k; l = r + 1) {
        int v = k / l;
        r = k / v;
        b.push_back(v);
    }
    b.push_back(0);
        int m = b.size();
    std::vector<int> id(k + 1);
    for (int i = 0; i < m; i++) {
        id[b[i]] = i;
    }
        std::vector<double> dp(m);
    dp[0] = k + 1;
        for (auto x : a) {
        for (int i = m - 1; i >= 0; i--) {
            double v = dp[i];
            int q = b[i];
            for (int l = 1, r; l <= q; l = r + 1) {
                int t = q / l;
                r = q / t;
                dp[id[t]] = std::max(dp[id[t]], v * (x / l) / x);
            }
            dp[m - 1] = std::max(dp[m - 1], v * (x / (q + 1)) / x);
        }
    }
        std::cout << dp[m - 1] << "\n";
        return 0;
}