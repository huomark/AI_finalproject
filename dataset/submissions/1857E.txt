#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> x(n);
    for (int i = 0; i < n; i++) {
        std::cin >> x[i];
    }
        std::vector<int> p(n);
    std::iota(p.begin(), p.end(), 0);
    std::sort(p.begin(), p.end(),
        [&](int i, int j) {
            return x[i] < x[j];
        });
    i64 res = std::accumulate(x.begin(), x.end(), 0LL) - 1LL * x[p[0]] * n + n;
    std::vector<i64> ans(n);
    for (int i = 0; i < n; i++) {
        if (i > 0) {
            res += 1LL * (x[p[i]] - x[p[i - 1]]) * (i - (n - i));
        }
        ans[p[i]] = res;
    }
    for (int i = 0; i < n; i++) {
        std::cout << ans[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}