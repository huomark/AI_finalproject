#include <bits/stdc++.h>
 using u32 = unsigned;
using i64 = long long;
using u64 = unsigned long long;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        i64 v = *std::max_element(a.begin(), a.end());
        for (int i = 0; i < n; i++) {
        if ((v - a[i]) % (2 * k) >= k) {
            v += 2 * k - (v - a[i]) % (2 * k);
        }
    }
    for (int i = 0; i < n; i++) {
        if ((v - a[i]) % (2 * k) >= k) {
            v = -1;
            break;
        }
    }
    std::cout << v << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}