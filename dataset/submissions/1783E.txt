#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n), b(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    for (int i = 0; i < n; i++) {
        std::cin >> b[i];
    }
        std::vector<int> d(n + 1);
    for (int i = 0; i < n; i++) {
        if (a[i] > b[i]) {
            d[b[i]]++;
            d[a[i]]--;
        }
    }
        for (int i = 1; i <= n; i++) {
        d[i] += d[i - 1];
    }
        std::vector<int> ans;
    for (int k = 1; k <= n; k++) {
        int ok = 1;
        for (int i = k; i <= n; i += k) {
            if (d[i]) {
                ok = 0;
                break;
            }
        }
        if (ok) ans.push_back(k);
    }
        std::cout << ans.size() << "\n";
    for (auto x : ans) {
        std::cout << x << " \n"[x == ans.back()];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}