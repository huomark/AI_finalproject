#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    std::vector<int> l(n, n), r(n, -1);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i]--;
        l[a[i]] = std::min(l[a[i]], i);
        r[a[i]] = std::max(r[a[i]], i);
    }
    int L = n, R = -1;
    std::vector<int> f(n);
    for (int i = 0; i < n; i++) {
        L = std::min(L, l[i]);
        R = std::max(R, r[i]);
        if (R - L <= i) {
            int l = std::max(0, R - i);
            int r = std::min(n - 1, L + i);
            f[l]++;
            if (r < n - 1) {
                f[r + 1]--;
            }
        }
    }
        for (int i = 1; i < n; i++) {
        f[i] += f[i - 1];
    }
        int ans = std::count(f.begin(), f.end(), n);
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}