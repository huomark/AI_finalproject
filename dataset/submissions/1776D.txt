#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int a, b, c, l;
    std::cin >> a >> b >> c >> l;
        int lo = 0, hi = a + b + c;
        std::vector<std::array<int, 3>> ans;
    auto check = [&](int x) {
        int cnt[5] {};
        cnt[2] = a;
        cnt[3] = b;
        cnt[4] = c;
                int tot = x;
        for (int i = 2; i <= 4; i++) {
            int v = std::min(cnt[i], tot);
            tot -= v;
            cnt[i] = v;
        }
                ans.clear();
        std::vector<int> f(l);
        tot = 0;
        for (int q = 2; q <= l; q++) {
            int maxlen = 2;
            while (maxlen < std::min(q, 4) && f[q - maxlen - 1] < 3) {
                maxlen++;
            }
            std::vector<int> cand{4, 2, 3};
            if (q == 3) {
                cand = {3, 2};
            }
            for (auto i : cand) {
                if (cnt[i] > 0 && i <= maxlen) {
                    tot++;
                    cnt[i]--;
                    for (int x = q - i; x < q; x++) {
                        f[x]++;
                    }
                    ans.push_back({0, q - i, q});
                    break;
                }
            }
        }
        int time[3] = {l, l, l};
        for (int i = int(ans.size()) - 1; i >= 0; i--) {
            int t = -1;
            for (int j = 0; j < 3; j++) {
                if (time[j] >= ans[i][2]) {
                    t = j;
                    break;
                }
            }
            time[t] = ans[i][1];
            ans[i][0] = t + 1;
        }
        return tot == x;
    };
        while (lo < hi) {
        int x = (lo + hi + 1) / 2;
        if (check(x)) {
            lo = x;
        } else {
            hi = x - 1;
        }
    }
        std::cout << lo << "\n";
    check(lo);
        for (auto [x, p, q] : ans) {
        std::cout << x << " " << p << " " << q << "\n";
    }
        return 0;
}