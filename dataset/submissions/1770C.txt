#include <bits/stdc++.h>
 using i64 = long long;
 bool isprime(int n) {
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) return 0;
    }
    return 1;
}
 void solve() {
    int n;
    std::cin >> n;
        std::vector<i64> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (a[i] == a[j]) {
                std::cout << "NO\n";
                return;
            }
        }
    }
        for (int i = 2; i <= n; i++) {
        if (!isprime(i)) continue;
        std::vector<int> cnt(i);
        for (auto x : a) cnt[x % i]++;
        if (*std::min_element(cnt.begin(), cnt.end()) >= 2) {
            std::cout << "NO\n";
            return;
        }
    }
    std::cout << "YES\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}