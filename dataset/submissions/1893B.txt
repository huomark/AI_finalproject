#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector<int> a(n), b(m);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        for (int i = 0; i < m; i++) {
        std::cin >> b[i];
    }
        std::vector<int> dp(n), f;
    for (int i = 0; i < n; i++) {
        auto it = std::lower_bound(f.begin(), f.end(), a[i]);
        dp[i] = it - f.begin() + 1;
        if (it == f.end()) {
            f.push_back(a[i]);
        } else {
            *it = a[i];
        }
    }
        int lis = f.size();
    std::vector<int> ans;
    std::sort(b.begin(), b.end(), std::greater());
    int j = 0;
    for (int i = 0; i < n; i++) {
        if (dp[i] == lis) {
            while (j < m && b[j] >= a[i]) {
                ans.push_back(b[j++]);
            }
        }
        ans.push_back(a[i]);
    }
    while (j < m) {
        ans.push_back(b[j++]);
    }
    for (int i = 0; i < n + m; i++) {
        std::cout << ans[i] << " \n"[i == n + m - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}