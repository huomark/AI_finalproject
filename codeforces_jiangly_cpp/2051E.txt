#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> a(n), b(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
    for (int i = 0; i < n; i++) {
        std::cin >> b[i];
    }
        std::vector<std::array<int, 2>> e;
    for (int i = 0; i < n; i++) {
        e.push_back({a[i], 0});
        e.push_back({b[i], 1});
    }
    std::sort(e.begin(), e.end());
        int cnt1 = n, cnt0 = 0;
    std::sort(e.begin(), e.end());
        i64 ans = 0;
    int lst = 0;
    for (auto [x, i] : e) {
        if (x > lst && cnt0 <= k) {
            ans = std::max(ans, 1LL * x * (cnt0 + cnt1));
        }
        lst = x;
        if (i == 0) {
            cnt1--;
            cnt0++;
        } else {
            cnt0--;
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}