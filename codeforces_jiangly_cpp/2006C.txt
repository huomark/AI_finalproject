#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> b(n - 1);
    for (int i = 0; i < n - 1; i++) {
        b[i] = std::abs(a[i] - a[i + 1]);
    }
        i64 ans = n;
    n--;
        std::vector<std::array<int, 2>> f;
    for (int i = 0; i < n; i++) {
        f.push_back({b[i], 1});
        int g = b[i];
        for (int j = f.size() - 1; j >= 0; j--) {
            g = std::gcd(g, f[j][0]);
            f[j][0] = g;
        }
        int k = 0;
        for (int j = 0; j < f.size(); j++) {
            if (k > 0 && f[j][0] == f[k - 1][0]) {
                f[k - 1][1] += f[j][1];
            } else {
                f[k++] = f[j];
            }
        }
        f.resize(k);
        for (auto [x, c] : f) {
            if (x == 0 || x == (x & -x)) {
                ans += c;
            }
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}