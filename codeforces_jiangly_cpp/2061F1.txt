#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    std::string s, t;
    std::cin >> s >> t;
        int n = s.size();
        std::vector<int> f(n + 1);
    for (int i = 0; i < n; i++) {
        f[i + 1] = f[i] + s[i] - t[i];
    }
        if (f[n] != 0) {
        std::cout << -1 << "\n";
        return;
    }
        int lst = 0;
    for (int i = 1; i <= n; i++) {
        if (f[i] == 0) {
            if (i - lst > 1) {
                int cnt = 0;
                for (int j = lst + 1; j < i; j++) {
                    if (t[j] != t[j - 1]) {
                        cnt++;
                    }
                }
                if (cnt != 1) {
                    std::cout << -1 << "\n";
                    return;
                }
                if (lst > 0 && (t[lst] != t[lst - 1] || s[lst] == s[lst - 1])) {
                    std::cout << -1 << "\n";
                    return;
                }
                if (i < n && (t[i] != t[i - 1] || s[i] == s[i - 1])) {
                    std::cout << -1 << "\n";
                    return;
                }
            }
            lst = i;
        }
    }
        int ans = 0;
    if (s[0] != t[0]) {
        ans++;
    }
    if (s[n - 1] != t[n - 1]) {
        ans++;
    }
    for (int i = 1; i < n; i++) {
        if (s[i] != s[i - 1]) {
            ans++;
        }
        if (t[i] != t[i - 1]) {
            ans--;
        }
    }
    ans /= 2;
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}