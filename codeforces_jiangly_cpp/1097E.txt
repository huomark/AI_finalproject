#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
using i128 = __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        int k = 0;
    while ((k + 1) * (k + 2) / 2 <= n) {
        k++;
    }
        std::vector<std::vector<int>> ans;
        std::vector<int> f, dp(n);
    std::vector<bool> vis(n);
    int cnt = 0;
    while (cnt < n) {
        f.clear();
        int e = -1;
        for (int i = 0; i < n; i++) {
            if (vis[i]) {
                continue;
            }
            auto it = std::lower_bound(f.begin(), f.end(), a[i]);
            dp[i] = it - f.begin();
            if (e == -1 || dp[i] > dp[e]) {
                e = i;
            }
            if (it == f.end()) {
                f.push_back(a[i]);
            } else {
                *it = a[i];
            }
        }
                if (dp[e] < k) {
            ans.resize(ans.size() + dp[e] + 1);
            for (int i = 0; i < n; i++) {
                if (!vis[i]) {
                    ans[ans.size() - dp[e] - 1 + dp[i]].push_back(a[i]);
                }
            }
            break;
        }
        std::vector<int> v;
        for (int i = e; i >= 0; i--) {
            if (!vis[i] && (i == e || (dp[i] == dp[e] - 1 && a[i] < a[e]))) {
                vis[i] = true;
                cnt++;
                v.push_back(a[i]);
                e = i;
                if (dp[e] == 0) {
                    break;
                }
            }
        }
        std::reverse(v.begin(), v.end());
        ans.push_back(v);
        k--;
    }
        std::cout << ans.size() << "\n";
    for (auto &p : ans) {
        std::cout << p.size();
        for (auto x : p) {
            std::cout << " " << x;
        }
        std::cout << "\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}