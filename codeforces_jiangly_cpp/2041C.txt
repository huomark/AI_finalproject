#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 constexpr int inf = 1E9;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector a(n, std::vector(n, std::vector<int>(n)));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            for (int k = 0; k < n; k++) {
                std::cin >> a[i][j][k];
            }
        }
    }
        std::vector<int> dp(1 << (2 * n), inf);
    dp[0] = 0;
    for (int s = 0; s < (1 << (2 * n)); s++) {
        if (dp[s] == inf) {
            continue;
        }
        int i = __builtin_popcount(s) / 2;
        for (int j = 0; j < n; j++) {
            if (s >> j & 1) {
                continue;
            }
            for (int k = 0; k < n; k++) {
                if (s >> (n + k) & 1) {
                    continue;
                }
                int ns = s | 1 << j | 1 << (n + k);
                dp[ns] = std::min(dp[ns], dp[s] + a[i][j][k]);
            }
        }
    }
        std::cout << dp.back() << "\n";
        return 0;
}