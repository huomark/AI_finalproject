#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, m;
    std::cin >> n >> m;
        std::vector<int> a(m);
    for (int i = 0; i < m; i++) {
        std::cin >> a[i];
        a[i] = std::min(a[i], n - 1);
    }
    std::sort(a.begin(), a.end());
        i64 ans = 0;
    std::vector<i64> suf(m + 1);
    for (int i = m - 1; i >= 0; i--) {
        suf[i] = suf[i + 1] + a[i];
    }
    for (int i = 0, j = m - 1; i < m; i++) {
        j = std::max(j, i);
        while (j > i && a[i] + a[j] >= n) {
            j--;
        }
        ans += 1LL * (a[i] - n + 1) * (m - 1 - j);
        ans += suf[j + 1];
    }
    std::cout << 2 * ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}