#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> p(n);
    for (int i = 0; i < n; i++) {
        std::cin >> p[i];
        p[i]--;
    }
        std::string s;
    std::cin >> s;
        std::vector<bool> vis(n);
    std::vector<int> f(n);
    for (int i = 0; i < n; i++) {
        if (vis[i]) {
            continue;
        }
        int j = i;
        int cnt = 0;
        while (!vis[j]) {
            cnt += (s[j] == '0');
            vis[j] = true;
            j = p[j];
        }
        do {
            f[j] = cnt;
            j = p[j];
        } while (j != i);
    }
    for (int i = 0; i < n; i++) {
        std::cout << f[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}