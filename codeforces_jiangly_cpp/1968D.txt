#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, k, PB, PS;
    std::cin >> n >> k >> PB >> PS;
    PB--;
    PS--;
        std::vector<int> p(n);
    for (int i = 0; i < n; i++) {
        std::cin >> p[i];
        p[i]--;
    }
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        auto get = [&](int x) {
        i64 ans = 0;
        i64 sum = 0;
        for (int i = 0; i < std::min(n, k); i++) {
            ans = std::max(ans, 1LL * (k - i) * a[x] + sum);
            sum += a[x];
            x = p[x];
        }
        return ans;
    };
        i64 ansB = get(PB);
    i64 ansS = get(PS);
    if (ansB > ansS) {
        std::cout << "Bodya\n";
    } else if (ansB < ansS) {
        std::cout << "Sasha\n";
    } else {
        std::cout << "Draw\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}