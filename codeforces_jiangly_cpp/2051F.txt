#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, m, q;
    std::cin >> n >> m >> q;
        int pre = 0, suf = n + 1, l = m, r = m;
    for (int i = 0; i < q; i++) {
        int a;
        std::cin >> a;
                int npre = pre, nsuf = suf;
        if (l <= r) {
            if (l <= a && a <= r) {
                npre = std::max(npre, 1);
                nsuf = std::min(nsuf, n);
            }
            if (l == a && r == a) {
                l = 1;
                r = 0;
            } else if (a > r) {
                r++;
            } else if (a < l) {
                l--;
            }
        }
                if (a <= pre || a >= suf) {
            npre = std::max(npre, 1);
            nsuf = std::min(nsuf, n);
        }
        if (pre >= 1 && a > pre) {
            npre = std::max(npre, pre + 1);
        }
        if (suf <= n && a < suf) {
            nsuf = std::min(nsuf, suf - 1);
        }
                pre = npre;
        suf = nsuf;
                if (l <= r && l <= pre) {
            pre = std::max(pre, r);
            l = 1;
            r = 0;
        }
        if (l <= r && r >= suf) {
            suf = std::min(suf, l);
            l = 1;
            r = 0;
        }
                int ans = std::min(n, pre + n + 1 - suf + r - l + 1);
                std::cout << ans << " \n"[i == q - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}