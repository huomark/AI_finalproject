#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> deg(n);
    for (int i = 1; i < n; i++) {
        int u, v;
        std::cin >> u >> v;
        u--;
        v--;
        deg[u]++;
        deg[v]++;
    }
        std::string s;
    std::cin >> s;
        int cnt[2] {}, cntq = 0;
    for (int i = 1; i < n; i++) {
        if (deg[i] > 1) {
            continue;
        }
        if (s[i] == '?') {
            cntq++;
        } else {
            cnt[s[i] - '0']++;
        }
    }
    int ans = -1;
    if (s[0] != '?') {
        ans = cnt[(s[0] - '0') ^ 1] + (cntq + 1) / 2;
    } else {
        ans = std::max(cnt[0], cnt[1]) + cntq / 2;
        if ((std::count(s.begin(), s.end(), '?') - cntq) % 2 == 0 && cnt[0] == cnt[1]) {
            ans = std::max(ans, cnt[0] + (cntq + 1) / 2);
        }
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}