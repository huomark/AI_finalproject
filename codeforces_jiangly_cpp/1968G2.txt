#include <bits/stdc++.h>
 using i64 = long long;
 std::vector<int> Z(std::string s) {
    int n = s.size();
    std::vector<int> z(n + 1);
    z[0] = n;
    for (int i = 1, j = 1; i < n; i++) {
        z[i] = std::max(0, std::min(j + z[j] - i, z[i - j]));
        while (i + z[i] < n && s[z[i]] == s[i + z[i]]) {
            z[i]++;
        }
        if (i + z[i] > j + z[j]) {
            j = i;
        }
    }
    return z;
}
 void solve() {
    int n, l, r;
    std::cin >> n >> l >> r;
        std::string s;
    std::cin >> s;
        auto z = Z(s);
    std::set<int> set;
    std::vector<std::vector<int>> vec(n + 1);
    for (int i = 0; i <= n; i++) {
        vec[z[i]].push_back(i);
        set.insert(i);
    }
        std::vector<int> g(n + 1);
    g[0] = n;
    for (int l = 1; l <= n; l++) {
        for (auto i : vec[l - 1]) {
            set.erase(i);
        }
        int x = 0, ans = 1;
        while (true) {
            auto it = set.lower_bound(x + l);
            if (it == set.end()) {
                break;
            }
            ans++;
            x = *it;
        }
        g[l] = ans;
    }
    for (int i = l, len = n; i <= r; i++) {
        while (len > 0 && g[len] < i) {
            len--;
        }
        std::cout << len << " \n"[i == r];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}