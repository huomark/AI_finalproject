#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
using i128 = __int128;
 constexpr int N = 20;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n, m;
    std::cin >> n >> m;
        std::vector<int> s(m);
    for (int i = 0; i < m; i++) {
        std::string t;
        std::cin >> t;
                for (auto c : t) {
            s[i] |= 1 << (c - 'A');
        }
    }
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        int suma = std::accumulate(a.begin(), a.end(), 0);
        std::vector<i64> ans(suma + 1);
        std::vector f(1 << n, std::array<i64, N + 1> {});
    std::vector<int> rk(1 << n);
    std::vector<int> sum(1 << n);
    for (int i = 0; i < (1 << n); i++) {
        for (int j = 0; j < n; j++) {
            if (i >> j & a[j] & 1) {
                rk[i]++;
            }
            if (i >> j & 1) {
                sum[i] += a[j];
            }
        }
    }
    for (int i = 0; i < m; i++) {
        f[s[i]][rk[s[i]]] += 1;
        if (!rk[s[i]]) {
            ans[suma - sum[s[i]]] -= 1;
        }
    }
        for (int i = 1; i < (1 << n); i *= 2) {
        for (int j = 0; j < (1 << n); j += 2 * i) {
            for (int k = 0; k < i; k++) {
                for (int l = 0; l <= n; l++) {
                    f[i + j + k][l] += f[j + k][l];
                }
            }
        }
    }
        for (int i = 0; i < (1 << n); i++) {
        std::array<i64, N + 1> nf {};
        for (int x = 0; x <= n; x++) {
            for (int y = 0; x + y <= n; y++) {
                nf[x + y] += f[i][x] * f[i][y];
            }
        }
        f[i] = nf;
    }
        for (int i = 1; i < (1 << n); i *= 2) {
        for (int j = 0; j < (1 << n); j += 2 * i) {
            for (int k = 0; k < i; k++) {
                for (int l = 0; l <= n; l++) {
                    f[i + j + k][l] -= f[j + k][l];
                }
            }
        }
    }
        for (int i = 0; i < (1 << n); i++) {
        ans[suma - sum[i]] += f[i][rk[i]];
    }
        for (int i = 0; i <= suma; i++) {
        ans[i] /= 2;
    }
    for (int i = 0; i <= suma; i++) {
        std::cout << ans[i] << " \n"[i == suma];
    }
        return 0;
}