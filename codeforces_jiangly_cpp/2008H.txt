#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n, q;
    std::cin >> n >> q;
        std::vector<int> a(n), cnt(n + 1);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        cnt[a[i]]++;
    }
        std::vector<int> ans(n + 1);
    for (int i = 1; i <= n; i++) {
        cnt[i] += cnt[i - 1];
    }
    for (int x = 1; x <= n; x++) {
        int lo = 0, hi = x - 1;
        while (lo < hi) {
            int m = (lo + hi) / 2;
            int k = 0;
            for (int l = 0; l <= n; l += x) {
                k += cnt[std::min(n, l + m)];
                if (l > 0) {
                    k -= cnt[l - 1];
                }
            }
            if (k * 2 > n) {
                hi = m;
            } else {
                lo = m + 1;
            }
        }
        ans[x] = lo;
    }
        while (q--) {
        int x;
        std::cin >> x;
                std::cout << ans[x] << " \n"[q == 0];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}