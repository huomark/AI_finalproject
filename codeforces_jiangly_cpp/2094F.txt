#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, m, k;
    std::cin >> n >> m >> k;
        int a = std::gcd(n, k);
    int b = k / a;
        assert(m % b == 0);
        if (a > 1 && b > 1) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                std::cout << i % a * b + j % b + 1 << " \n"[j == m - 1];
            }
        }
    } else if (a == 1) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                std::cout << i % a * b + (i + j) % b + 1 << " \n"[j == m - 1];
            }
        }
    } else {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                std::cout << (i + j) % a * b + (i + j) % b + 1 << " \n"[j == m - 1];
            }
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}