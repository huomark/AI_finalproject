#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n, k, q;
    std::cin >> n >> k >> q;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i] += n - i - 1;
    }
        std::vector<int> f(n - k + 1);
        std::vector<int> cnt(2 * n), freq(n + 1);
    freq[0] = 2 * n;
    int res = 0;
    for (int i = 0; i < k - 1; i++) {
        freq[cnt[a[i]]]--;
        res = std::max(res, ++cnt[a[i]]);
        freq[cnt[a[i]]]++;
    }
    for (int i = 0; i <= n - k; i++) {
        freq[cnt[a[i + k - 1]]]--;
        res = std::max(res, ++cnt[a[i + k - 1]]);
        freq[cnt[a[i + k - 1]]]++;
                while (freq[res] == 0) {
            res--;
        }
        f[i] = k - res;
                freq[cnt[a[i]]]--;
        cnt[a[i]]--;
        freq[cnt[a[i]]]++;
    }
        while (q--) {
        int l, r;
        std::cin >> l >> r;
        l--;
        std::cout << f[l] << "\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}