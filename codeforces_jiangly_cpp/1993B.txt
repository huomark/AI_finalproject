#include <bits/stdc++.h>
 using u32 = unsigned;
using i64 = long long;
using u64 = unsigned long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> odd, even;
    odd.reserve(n);
    even.reserve(n);
        for (int i = 0; i < n; i++) {
        int a;
        std::cin >> a;
                if (a % 2 == 1) {
            odd.push_back(a);
        } else {
            even.push_back(a);
        }
    }
        if (odd.empty()) {
        std::cout << 0 << "\n";
        return;
    }
        int ans = even.size();
    std::sort(odd.begin(), odd.end());
    std::sort(even.begin(), even.end());
    i64 cur = odd.back();
    for (auto x : even) {
        if (cur < x) {
            ans++;
            break;
        }
        cur += x;
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}