#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> s(k);
    for (int i = 0; i < k; i++) {
        char c;
        std::cin >> c;
        s[i] = c - '0';
    }
    std::vector<int> cnt(k);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < k; j++) {
            char c;
            std::cin >> c;
            cnt[j] += c - '0';
        }
    }
        std::vector dp(k + 1, std::vector<std::pair<int, int>>(n, std::make_pair(-1, -1)));
    dp[k][0] = {0, 0};
    for (int i = k - 1; i >= 0; i--) {
        for (int j = 0; j < n; j++) {
            if (dp[i + 1][j].first != -1) {
                for (int x = 0; x < 2; x++) {
                    int nj = j + (x == 0 ? cnt[i] : n - cnt[i]) - s[i];
                    if (nj % 2 != 0) {
                        continue;
                    }
                    nj /= 2;
                    assert(0 <= nj && nj < n);
                    dp[i][nj] = {x, j};
                }
            }
        }
    }
    if (dp[0][0].first == -1) {
        std::cout << -1 << "\n";
    } else {
        int j = 0;
        for (int i = 0; i < k; i++) {
            std::cout << dp[i][j].first;
            j = dp[i][j].second;
        }
        std::cout << "\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}