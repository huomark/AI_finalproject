#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> l(n), r(n);
    std::vector<int> cnt(2 * n);
    std::vector<int> pre(2 * n + 1);
    for (int i = 0; i < n; i++) {
        std::cin >> l[i] >> r[i];
        l[i]--;
        if (l[i] + 1 == r[i]) {
            cnt[l[i]]++;
        }
    }
    for (int i = 0; i < 2 * n; i++) {
        pre[i + 1] = pre[i] + (cnt[i] == 0);
    }
        for (int i = 0; i < n; i++) {
        if (l[i] + 1 < r[i]) {
            std::cout << (pre[l[i]] != pre[r[i]]);
        } else {
            std::cout << (cnt[l[i]] == 1);
        }
    }
    std::cout << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}