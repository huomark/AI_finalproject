#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n, q;
    std::cin >> n >> q;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<i64> pre(n + 1);
    for (int i = 0; i < n; i++) {
        pre[i + 1] = pre[i] + a[i];
    }
        auto query = [&](i64 m) {
        int u = m / n;
        i64 res = pre[n] * u;
        int v = m % n;
        if (v > 0) {
            if (u + v <= n) {
                res += pre[u + v] - pre[u];
            } else {
                res += pre[u + v - n] + pre[n] - pre[u];
            }
        }
        return res;
    };
        while (q--) {
        i64 l, r;
        std::cin >> l >> r;
        l--;
                i64 ans = query(r) - query(l);
        std::cout << ans << "\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}