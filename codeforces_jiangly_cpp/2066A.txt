#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> x(n);
    for (int i = 0; i < n; i++) {
        std::cin >> x[i];
        x[i]--;
    }
        std::vector<int> ix(n, -1);
    for (int i = 0; i < n; i++) {
        ix[x[i]] = i;
    }
        {
        int c = std::find(ix.begin(), ix.end(), -1) - ix.begin();
        if (c != n) {
            std::cout << "? " << c + 1 << " " << (c + 1) % n + 1 << std::endl;
            int res;
            std::cin >> res;
            if (res == 0) {
                std::cout << "! A" << std::endl;
            } else {
                std::cout << "! B" << std::endl;
            }
            return;
        }
    }
        int a = ix[0], b = ix[n - 1];
        std::cout << "? " << a + 1 << " " << b + 1 << std::endl;
    int res;
    std::cin >> res;
        if (res < n - 1) {
        std::cout << "! A" << std::endl;
        return;
    }
    if (res > n - 1) {
        std::cout << "! B" << std::endl;
        return;
    }
        std::cout << "? " << b + 1 << " " << a + 1 << std::endl;
    std::cin >> res;
    if (res < n - 1) {
        std::cout << "! A" << std::endl;
        return;
    }
    assert(res == n - 1);
    std::cout << "! B" << std::endl;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}