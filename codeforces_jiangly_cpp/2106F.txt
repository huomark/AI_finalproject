#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 using i128 = __int128;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::string s;
    std::cin >> s;
        if (s == "0") {
        std::cout << 0 << "\n";
        return;
    }
        i64 ans = 1;
    for (int l = 0, r = 0; l < n; l = r) {
        while (r < n && s[l] == s[r]) {
            r++;
        }
        if (s[l] == '0') {
            ans = std::max(ans, 1LL * (l + r - 1) * (r - l) / 2 + (l > 0));
            ans = std::max(ans, 1LL * (n - 1 - l + n - 1 - (r - 1)) * (r - l) / 2 + (r < n));
        }
    }
        for (int i = 1; i < n - 1; i++) {
        if (s[i] == '1') {
            int l = i, r = i + 1;
            while (l && s[l - 1] == '0') {
                l--;
            }
            while (r < n && s[r] == '0') {
                r++;
            }
                        if (l < i && r > i + 1) {
                ans = std::max(ans, 1LL * (n - 1 - l + n - 1 - (i - 1)) * (i - l) / 2 + 1LL * (i + 1 + r - 1) * (r - (i + 1)) / 2 + 1);
            }
        }
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}