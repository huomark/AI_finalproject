#include <bits/stdc++.h>
 using i64 = long long;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> p(n);
    std::iota(p.begin(), p.end(), 0);
        if (std::find(a.begin(), a.end(), 0) != a.end()) {
        for (int i = 0; i < n; i++) {
            if (a[p[i]] == 0) {
                std::swap(p[i], p[0]);
                break;
            }
        }
    } else {
        std::vector<int> lst(n + 1, -1);
        int ok = 0;
        for (int i = 0; i < n; i++) {
            if (lst[a[i]] == -1) {
                lst[a[i]] = i;
            } else {
                std::swap(p[lst[a[i]]], p[0]);
                std::swap(p[i], p[std::min(n - 1, a[i])]);
                ok = 1;
                break;
            }
        }
        if (!ok) {
            if (n == 2) {
                std::cout << "NO\n";
                return 0;
            }
            for (int x = 3; x >= 1; x--) {
                for (int i = 0; i < n; i++) {
                    if (a[p[i]] == x) {
                        std::swap(p[i], p[3 - x]);
                        break;
                    }
                }
            }
        }
    }
        std::vector<int> x(n), y(n);
    std::vector<int> ans(n);
    x[p[0]] = 0;
    y[p[0]] = 0;
        for (int i = 1; i < n; i++) {
        x[p[i]] = i;
        if (a[p[i]] <= i) {
            y[p[i]] = y[p[i - a[p[i]]]];
            ans[p[i]] = p[i - a[p[i]]];
        } else {
            y[p[i]] = a[p[i]] - i;
            ans[p[i]] = p[0];
        }
    }
        for (int i = 0; i < n; i++) {
        if (std::abs(x[i] - x[p[0]]) + std::abs(y[i] - y[p[0]]) == a[p[0]]) {
            ans[p[0]] = i;
        }
    }
        std::cout << "YES\n";
    for (int i = 0; i < n; i++) {
        std::cout << x[i] + 1 << " " << y[i] + 1 << "\n";
    }
    for (int i = 0; i < n; i++) {
        std::cout << ans[i] + 1 << " \n"[i == n - 1];
    }
        return 0;
}