#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int q;
    std::cin >> q;
        std::deque<int> a;
        i64 sum = 0;
    i64 ans = 0;
        bool rev = false;
        for (int i = 0; i < q; i++) {
        int s;
        std::cin >> s;
                if (s == 1) {
            if (!rev) {
                int x = a.back();
                ans += sum;
                ans -= i64(a.size()) * x;
                a.pop_back();
                a.push_front(x);
            } else {
                int x = a.front();
                ans -= sum;
                ans += i64(a.size()) * x;
                a.pop_front();
                a.push_back(x);
            }
        } else if (s == 2) {
            rev ^= 1;
        } else {
            int k;
            std::cin >> k;
            if (!rev) {
                ans += i64(a.size()) * k;
                sum += k;
                a.push_back(k);
            } else {
                ans += sum;
                sum += k;
                a.push_front(k);
            }
        }
                if (!rev) {
            std::cout << ans + sum << "\n";
        } else {
            std::cout << sum * i64(a.size()) - ans << "\n";
        }
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}