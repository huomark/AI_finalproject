#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<i64> ans(n);
    for (int i = 0, x = a[0]; i < n; i++) {
        x = std::max(x, a[i]);
        ans[n - 1 - i] += x;
    }
    i64 sum = 0;
    for (int i = 0; i < n; i++) {
        ans[i] += sum;
        sum += a[n - 1 - i];
    }
        for (int i = 0; i < n; i++) {
        std::cout << ans[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}