#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
using i128 = __int128;
 void solve() {
    std::string s;
    std::cin >> s;
        int A, B, AB, BA;
    std::cin >> A >> B >> AB >> BA;
        int cntA = std::count(s.begin(), s.end(), 'A');
    int cntB = std::count(s.begin(), s.end(), 'B');
        int two = std::max({0, cntA - A, cntB - B});
        if (two > AB + BA) {
        std::cout << "NO\n";
        return;
    }
        int arbi = 0;
    int n = s.size();
    std::vector<int> a, b;
    for (int r = 1, l = 0; r <= n; r++) {
        if (r == n || s[r] == s[r - 1]) {
            if ((r - l) % 2 == 1) {
                arbi += (r - l) / 2;
            } else if (s[l] == 'A') {
                a.push_back((r - l) / 2);
            } else {
                b.push_back((r - l) / 2);
            }
            l = r;
        }
    }
        int suma = std::accumulate(a.begin(), a.end(), 0);
    int sumb = std::accumulate(b.begin(), b.end(), 0);
    int tot = suma + sumb + arbi;
        std::sort(a.begin(), a.end(), std::greater());
    std::sort(b.begin(), b.end(), std::greater());
    if (suma > AB) {
        for (auto x : a) {
            if (suma > AB) {
                suma -= x;
                tot--;
            }
        }
    } else if (sumb > BA) {
        for (auto x : b) {
            if (sumb > BA) {
                sumb -= x;
                tot--;
            }
        }
    }
        if (tot >= two) {
        std::cout << "YES\n";
    } else {
        std::cout << "NO\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}