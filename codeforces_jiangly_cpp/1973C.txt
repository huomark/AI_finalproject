#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> p(n);
    for (int i = 0; i < n; i++) {
        std::cin >> p[i];
    }
        int t = std::find(p.begin(), p.end(), 1) - p.begin();
    t %= 2;
        std::vector<int> q(n);
    for (int i = 0; i < 2; i++) {
        std::vector<int> a(n / 2);
        for (int j = 0; j < n / 2; j++) {
            a[j] = j * 2 + (t ^ 1 ^ i);
        }
        std::sort(a.begin(), a.end(),
            [&](int i, int j) {
                return p[i] < p[j];
            });
        for (int j = 0; j < n / 2; j++) {
            q[a[j]] = n - j - n / 2 * i;
        }
    }
    for (int i = 0; i < n; i++) {
        std::cout << q[i] << " \n"[i == n - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}