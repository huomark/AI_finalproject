#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        auto check = [&](int x) {
        std::vector<bool> vis(x);
        int cnt = 0;
        int cur = 0;
        for (int i = 0; i < n; i++) {
            if (a[i] < x && !vis[a[i]]) {
                vis[a[i]] = true;
                cur++;
            }
            if (cur == x) {
                cur = 0;
                std::fill(vis.begin(), vis.end(), false);
                cnt++;
            }
        }
        return cnt >= k;
    };
        int lo = 0, hi = n;
    while (lo < hi) {
        int x = (lo + hi + 1) / 2;
        if (check(x)) {
            lo = x;
        } else {
            hi = x - 1;
        }
    }
    std::cout << lo << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}