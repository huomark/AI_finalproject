#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
using i128 = __int128;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::vector<std::string> s(2 * n - 2), t;
    for (int i = 0; i < 2 * n - 2; i++) {
        std::cin >> s[i];
        if (s[i].size() == n - 1) {
            t.push_back(s[i]);
        }
    }
    if (t[0].substr(1) != t[1].substr(0, n - 2) || std::find(s.begin(), s.end(), t[0].substr(0, 1)) == s.end() || (n != 2 && std::find(s.begin(), s.end(), t[0].substr(0, 2)) == s.end())) {
        std::swap(t[0], t[1]);
    }
    auto S = t[0][0] + t[1];
    std::vector<bool> vis(n);
    for (int i = 0; i < 2 * n - 2; i++) {
        if (s[i] == S.substr(0, s[i].size()) && !vis[s[i].size()]) {
            vis[s[i].size()] = true;
            std::cout << "P";
        } else {
            std::cout << "S";
        }
    }
    std::cout << "\n";
        return 0;
}