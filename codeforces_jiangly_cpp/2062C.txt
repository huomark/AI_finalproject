#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<i64> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        i64 ans = std::accumulate(a.begin(), a.end(), 0LL);
    for (int i = 1; i < n; i++) {
        std::vector<i64> b(a.size() - 1);
        for (int j = 0; j < b.size(); j++) {
            b[j] = a[j + 1] - a[j];
        }
        i64 s = std::accumulate(b.begin(), b.end(), 0LL);
        ans = std::max(ans, std::abs(s));
        a = b;
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}