#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, q;
    std::cin >> n >> q;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<int> s(n + 1);
    for (int i = 0; i < n; i++) {
        s[i + 1] = s[i] ^ a[i];
    }
        std::map<int, std::vector<int>> vec;
    for (int i = 0; i <= n; i++) {
        vec[s[i]].push_back(i);
    }
        while (q--) {
        int l, r;
        std::cin >> l >> r;
        l--;
                if (s[l] == s[r]) {
            std::cout << "YES\n";
            continue;
        }
                auto it = std::lower_bound(vec[s[r]].begin(), vec[s[r]].end(), l + 1);
        if (it == vec[s[r]].end() || *it >= r) {
            std::cout << "NO\n";
            continue;
        }
        int p = *it;
        it = std::lower_bound(vec[s[l]].begin(), vec[s[l]].end(), p + 1);
        if (it == vec[s[l]].end() || *it >= r) {
            std::cout << "NO\n";
            continue;
        }
        p = *it;
        it = std::lower_bound(vec[s[r]].begin(), vec[s[r]].end(), p + 1);
        if (it == vec[s[r]].end() || *it > r) {
            std::cout << "NO\n";
        } else {
            std::cout << "YES\n";
        }
    }
    std::cout << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}