#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 int query(int l, int r) {
    std::cout << "? " << l << " " << r << std::endl;
    i64 ans;
    std::cin >> ans;
    return ans;
}
 void solve() {
    int n;
    std::cin >> n;
        std::vector<i64> a(n);
    for (int i = 1; i < n; i++) {
        a[i] = query(1, i + 1);
    }
    if (a == std::vector(n, 0LL)) {
        std::cout << "! IMPOSSIBLE" << std::endl;
        return;
    }
    int i = 0;
    while (a[i] == 0) {
        i++;
    }
    std::string s(n, '0');
    for (int j = 0; j < i - a[i]; j++) {
        s[j] = '1';
    }
    for (int j = i; j < n; j++) {
        s[j] = (a[j] > a[j - 1] ? '1' : '0');
    }
    std::cout << "! " << s << std::endl;
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}