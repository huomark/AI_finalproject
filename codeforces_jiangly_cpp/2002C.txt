#include <bits/stdc++.h>
 using u32 = unsigned;
using i64 = long long;
using u64 = unsigned long long;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> x(n), y(n);
    for (int i = 0; i < n; i++) {
        std::cin >> x[i] >> y[i];
    }
        int xs, ys, xt, yt;
    std::cin >> xs >> ys >> xt >> yt;
        i64 dis = 1LL * (xs - xt) * (xs - xt) + 1LL * (ys - yt) * (ys - yt);
        bool ok = true;
    for (int i = 0; i < n; i++) {
        i64 res = 1LL * (x[i] - xt) * (x[i] - xt) + 1LL * (y[i] - yt) * (y[i] - yt);
        if (res <= dis) {
            ok = false;
            break;
        }
    }
        if (ok) {
        std::cout << "YES\n";
    } else {
        std::cout << "NO\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}