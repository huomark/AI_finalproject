#include <bits/stdc++.h>
 using i64 = long long;
 constexpr int inf = 1E9;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
        a[i]--;
    }
        std::vector dp(n + 1, std::vector(n + 1, inf));
    for (int l = n; l >= 0; l--) {
        dp[l][l] = 0;
        for (int r = l + 2; r <= n; r += 2) {
            for (int i = l + 2; i < r; i += 2) {
                dp[l][r] = std::min(dp[l][r], std::max(dp[l][i], dp[i][r] - (i - l)));
            }
            if (a[l] <= l && a[l] % 2 == l % 2 && dp[l + 1][r - 1] <= l - a[l]) {
                dp[l][r] = std::min(dp[l][r], l - a[l]);
            }
        }
    }
        std::vector f(n + 1, std::vector<bool>(n + 1));
    f[0][0] = true;
    for (int l = 0; l < n; l++) {
        for (int c = 0; c <= l; c += 2) {
            if (f[l][c]) {
                f[l + 1][c] = true;
                for (int r = l + 2; r <= n; r += 2) {
                    if (dp[l][r] <= c) {
                        f[r][c + r - l] = true;
                    }
                }
            }
        }
    }
        int ans = n / 2;
    while (!f[n][ans * 2]) {
        ans--;
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}