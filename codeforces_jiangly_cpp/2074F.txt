#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 int get1side(int n, int k) {
    int ans = 0;
    for (int i = 1; i <= k; i *= 2) {
        if (n & i) {
            ans += k / i;
        }
    }
    return ans;
}
 int get(int l1, int r1, int l2, int r2, int k) {
    if (l1 >= k || r1 <= 0 || l2 >= k || r2 <= 0) {
        return 0;
    }
    if (l1 <= 0 && r1 >= k && l2 <= 0 && r2 >= k) {
        return 1;
    }
    if (l1 <= 0 && r1 >= k && l2 <= 0) {
        return get1side(r2, k);
    }
    if (l1 <= 0 && r1 >= k && r2 >= k) {
        return get1side(k - l2, k);
    }
    if (l2 <= 0 && r2 >= k && l1 <= 0) {
        return get1side(r1, k);
    }
    if (l2 <= 0 && r2 >= k && r1 >= k) {
        return get1side(k - l1, k);
    }
    assert(k > 1);
    return get(l1, r1, l2, r2, k / 2) + get(l1, r1, l2 - k / 2, r2 - k / 2, k / 2) + get(l1 - k / 2, r1 - k / 2, l2, r2, k / 2) + get(l1 - k / 2, r1 - k / 2, l2 - k / 2, r2 - k / 2, k / 2);
}
 void solve() {
    int l1, r1, l2, r2;
    std::cin >> l1 >> r1 >> l2 >> r2;
        std::cout << get(l1, r1, l2, r2, 1 << 20) << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}