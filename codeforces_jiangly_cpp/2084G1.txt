#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 constexpr i64 inf = 1E18;
 void chmax(i64 &a, i64 b) {
    if (a < b) {
        a = b;
    }
}
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> f(n, -1);
    for (int i = 0; i < n; i++) {
        int x;
        std::cin >> x;
        x--;
        if (x >= 0) {
            f[x] = i % 2;
        }
    }
        const int n0 = (n + 1) / 2, n1 = n / 2;
    std::vector<i64> dp(n1 + 1, -inf);
    dp[0] = 0;
    for (int x = 0; x < n; x++) {
        for (int b = std::min(x, n1); b >= 0; b--) {
            int a = x - b;
            if (b < n1 && f[x] != 0) {
                chmax(dp[b + 1], dp[b] + 1LL * (x + 1) * (n0 - a + b + 1));
            }
            if (f[x] != 1) {
                dp[b] += 1LL * (x + 1) * (n1 - b + a + 1);
            } else {
                dp[b] = -inf;
            }
        }
    }
        std::cout << dp[n1] << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}