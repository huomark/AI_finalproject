#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 void solve() {
    int n;
    std::cin >> n;
        std::string s;
    std::cin >> s;
        int ans = n;
        int cnt[2][26] {};
    for (int i = 0; i < n; i++) {
        cnt[i % 2][s[i] - 'a']++;
    }
    if (n % 2 == 0) {
        ans = n - *std::max_element(cnt[0], cnt[0] + 26) - *std::max_element(cnt[1], cnt[1] + 26);
    }
    for (int i = n - 1; i >= 0; i--) {
        cnt[i % 2][s[i] - 'a']--;
        if (n % 2 == 1) {
            ans = std::min(ans, n - *std::max_element(cnt[0], cnt[0] + 26) - *std::max_element(cnt[1], cnt[1] + 26));
        }
        cnt[(i + 1) % 2][s[i] - 'a']++;
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}