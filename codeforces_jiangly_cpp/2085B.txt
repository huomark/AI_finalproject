#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 using i128 = __int128;
using u128 = unsigned __int128;
 namespace ranges = std::ranges;
namespace views = std::views;
 void solve() {
    int n;
    std::cin >> n;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        std::vector<std::array<int, 2>> ans;
    if (ranges::count(a | views::drop(2), 0)) {
        ans.push_back({2, n});
        n = 3;
    }
    if (ranges::count(a | views::take(2), 0)) {
        ans.push_back({0, 2});
        n--;
    }
        ans.push_back({0, n});
        std::cout << ans.size() << "\n";
    for (auto [l, r] : ans) {
        std::cout << l + 1 << " " << r << "\n";
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}