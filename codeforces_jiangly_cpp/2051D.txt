#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n;
    i64 x, y;
    std::cin >> n >> x >> y;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        i64 s = std::accumulate(a.begin(), a.end(), 0LL);
    std::swap(x, y);
    x = s - x;
    y = s - y;
    std::sort(a.begin(), a.end());
        i64 ans = 0;
    for (int i = 0; i < n; i++) {
        int l = std::lower_bound(a.begin(), a.end(), x - a[i]) - a.begin();
        int r = std::lower_bound(a.begin(), a.end(), y - a[i] + 1) - a.begin();
        ans += r - l;
        if (l <= i && i < r) {
            ans--;
        }
    }
    ans /= 2;
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}