#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
using i128 = __int128;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        std::string s;
    std::cin >> s;
        std::vector<int> f(n + 1);
    f[0] = 3 * n;
    for (int i = 0; i < n; i++) {
        f[i + 1] = f[i] + (s[i] == '0' ? 1 : -3);
    }
        std::vector<int> cnt(4 * n + 1);
    i64 ans = 0;
    int sum = 0;
    for (int i = 0, j = 3 * n; i <= n; i++) {
        if (f[i] + 1 <= 4 * n) {
            ans += cnt[f[i] + 1];
        }
        int r = std::max(-1, f[i] - 2);
        while (j < r) {
            sum += cnt[++j];
        }
        while (j > r) {
            sum -= cnt[j--];
        }
        ans += sum;
        cnt[f[i]]++;
        if (f[i] <= j) {
            sum++;
        }
    }
        std::cout << ans << "\n";
        return 0;
}