#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, x;
    std::cin >> n >> x;
        std::vector<int> d;
    for (int i = 1; i * i <= x; i++) {
        if (x % i == 0) {
            d.push_back(i);
            if (i * i != x) {
                d.push_back(x / i);
            }
        }
    }
    std::sort(d.begin(), d.end());
    const int m = d.size();
        std::vector<bool> dp(m);
    dp[0] = true;
        std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }
        int ans = 1;
    for (int i = 0; i < n; i++) {
        bool ok = true;
        for (int j = 0; j < m; j++) {
            if (dp[j] && 1LL * a[i] * d[j] == x) {
                ok = false;
            }
        }
        if (!ok) {
            ans++;
            std::fill(dp.begin(), dp.end(), false);
            dp[0] = true;
        }
        for (int j = m - 1, k = m - 1; j >= 0; j--) {
            while (k >= 0 && d[k] > 1LL * d[j] * a[i]) {
                k--;
            }
            if (d[k] == 1LL * d[j] * a[i] && dp[j]) {
                dp[k] = true;
            }
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}