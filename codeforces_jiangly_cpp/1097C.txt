#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
using i128 = __int128;
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int n;
    std::cin >> n;
        constexpr int M = 5E5;
        std::vector<int> cnt(2 * M + 1);
    for (int i = 0; i < n; i++) {
        std::string s;
        std::cin >> s;
                int m = s.size();
        std::vector<int> pre(m + 1);
        for (int j = 0; j < m; j++) {
            pre[j + 1] = pre[j] + (s[j] == '(' ? 1 : -1);
        }
        int mn = *std::min_element(pre.begin(), pre.end());
        if (mn == 0 || mn == pre[m]) {
            cnt[M + pre[m]]++;
        }
    }
        int ans = 0;
    for (int i = 1; i <= M; i++){
        ans += std::min(cnt[M + i], cnt[M - i]);
    }
    ans += cnt[M] / 2;
    std::cout << ans << "\n";
        return 0;
}