#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    int n, q, k;
    std::cin >> n >> q >> k;
        std::vector<int> b(n), a(n);
    const int sqrtk = std::sqrt(k);
    for (int i = 0; i < n; i++) {
        std::cin >> b[i];
        a[i] = k / b[i];
    }
        std::vector<int> l(q), r(q);
    for (int i = 0; i < q; i++) {
        std::cin >> l[i] >> r[i];
        l[i]--;
    }
        std::vector<int> ans(q), first(q, 1);
    std::vector<int> pres(n + 1), prel(n + 1);
    for (int v = sqrtk; v > 0; v--) {
        for (int i = 0; i < n; i++) {
            pres[i + 1] = pres[i] + (b[i] == v);
        }
        for (int i = 0; i < n; i++) {
            prel[i + 1] = prel[i] + (b[i] > sqrtk && a[i] == v);
        }
        for (int i = 0; i < q; i++) {
            int cnts = pres[r[i]] - pres[l[i]];
            int cntl = prel[r[i]] - prel[l[i]];
            ans[i] += cntl;
            if (cnts > 0) {
                ans[i] = std::max(0, ans[i] - cnts - first[i]);
                first[i] = 0;
            }
        }
    }
        for (int i = 0; i < q; i++) {
        std::cout << (ans[i] + !first[i]) / 2 << " \n"[i == q - 1];
    }
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}