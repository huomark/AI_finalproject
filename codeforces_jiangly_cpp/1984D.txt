#include <bits/stdc++.h>
 using i64 = long long;
 void solve() {
    std::string s;
    std::cin >> s;
        const int n = s.size();
        if (std::count(s.begin(), s.end(), 'a') == n) {
        std::cout << n - 1 << "\n";
        return;
    }
        std::vector<int> p;
    for (int i = 0; i < n; i++) {
        if (s[i] != 'a') {
            p.push_back(i);
        }
    }
        const int m = p.size();
        i64 ans = 0;
    for (int c = 1; c <= m; c++) {
        if (m % c != 0) {
            continue;
        }
        int ok = 1;
        for (int i = c; i < m; i++) {
            if (s[p[i]] != s[p[i - c]]) {
                ok = 0;
                break;
            }
            if (i % c != 0 && p[i] - p[i - c] != p[i - 1] - p[i - c - 1]) {
                ok = 0;
                break;
            }
        }
        if (!ok) {
            continue;
        }
        int l = p[0], r = n - 1 - p[m - 1];
        int s = n;
        for (int i = c; i < m; i += c) {
            s = std::min(s, p[i] - p[i - 1] - 1);
        }
        for (int x = 0; x <= l; x++) {
            ans += std::max(0, std::min(r + 1, s - x + 1));
        }
    }
        std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}