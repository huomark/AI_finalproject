#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
 using i128 = __int128;
using u128 = unsigned __int128;
 namespace ranges = std::ranges;
namespace views = std::views;
 void solve() {
    int n, k;
    std::cin >> n >> k;
        std::vector<int> d(n);
    for (int i = 0; i < n; i++) {
        std::cin >> d[i];
    }
        i64 ans = 0;
    std::priority_queue<int> pq;
    for (int i = 0; i < n; i++) {
        pq.push(d[i]);
        if ((n - 1 - i) % (k + 1) == k) {
            ans += pq.top();
            pq.pop();
        }
    }
    std::cout << ans << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}