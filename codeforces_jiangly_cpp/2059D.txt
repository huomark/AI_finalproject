#include <bits/stdc++.h>
 using i64 = long long;
using u64 = unsigned long long;
using u32 = unsigned;
using u128 = unsigned __int128;
 void solve() {
    int n, s1, s2;
    std::cin >> n >> s1 >> s2;
    s1--;
    s2--;
        int m1;
    std::cin >> m1;
        std::vector<std::vector<int>> adj1(n);
    for (int i = 0; i < m1; i++) {
        int u, v;
        std::cin >> u >> v;
        u--;
        v--;
        adj1[u].push_back(v);
        adj1[v].push_back(u);
    }
        int m2;
    std::cin >> m2;
        std::vector<std::vector<int>> adj2(n);
    for (int i = 0; i < m2; i++) {
        int u, v;
        std::cin >> u >> v;
        u--;
        v--;
        adj2[u].push_back(v);
        adj2[v].push_back(u);
    }
        std::vector dis(n, std::vector<int>(n, -1));
    std::priority_queue<std::array<int, 3>, std::vector<std::array<int, 3>>, std::greater<>> pq;
    pq.push({0, s1, s2});
        while (!pq.empty()) {
        auto [d, x1, x2] = pq.top();
        pq.pop();
                if (dis[x1][x2] != -1) {
            continue;
        }
        dis[x1][x2] = d;
                for (auto y1 : adj1[x1]) {
            for (auto y2 : adj2[x2]) {
                if (x1 == x2 && y1 == y2) {
                    std::cout << d << "\n";
                    return;
                }
                pq.push({d + std::abs(y1 - y2), y1, y2});
            }
        }
    }
        std::cout << -1 << "\n";
}
 int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
        int t;
    std::cin >> t;
        while (t--) {
        solve();
    }
        return 0;
}